{"id":"spanner\/transaction","type":"","title":"Google\\Cloud\\Spanner\\Transaction","name":"Transaction","description":"<p>Manages interaction with Cloud Spanner inside a Transaction.<\/p>\n<p>Transactions can be started via\n<a data-custom-type=\"spanner\/database\" data-method=\"runTransaction\">Google\\Cloud\\Spanner\\Database::runTransaction()<\/a> (recommended) or via\n<a data-custom-type=\"spanner\/database\" data-method=\"transaction\">Google\\Cloud\\Spanner\\Database::transaction()<\/a>. Transactions should\nalways call <a data-custom-type=\"spanner\/transaction\" data-method=\"commit\">Google\\Cloud\\Spanner\\Transaction::commit()<\/a> or\n<a data-custom-type=\"spanner\/transaction\" data-method=\"rollback\">Google\\Cloud\\Spanner\\Transaction::rollback()<\/a> to ensure that locks are\nreleased in a timely manner.<\/p>\n<p>If you do not plan on performing any writes in your transaction, a\n<a data-custom-type=\"spanner\/snapshot\">Google\\Cloud\\Spanner\\Snapshot<\/a> is a better solution which does not\nrequire a commit or rollback and does not lock any data.<\/p>\n<p>Transactions may raise <a data-custom-type=\"cloud-core\/v1.7.0\/core\/exception\/abortedexception\">Google\\Cloud\\Core\\Exception\\AbortedException<\/a> errors\nwhen the transaction cannot complete for any reason. In this case, the entire\noperation (all reads and writes) should be reapplied atomically. Google Cloud\nPHP handles this transparently when using\n<a data-custom-type=\"spanner\/database\" data-method=\"runTransaction\">Google\\Cloud\\Spanner\\Database::runTransaction()<\/a>. In other cases, it is\nhighly recommended that applications implement their own retry logic.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Spanner\\SpannerClient;\n\n$spanner = new SpannerClient();\n\n$database = $spanner->connect('my-instance', 'my-database');\n\n$database->runTransaction(function (Transaction $t) {\n    \/\/ do stuff.\n\n    $t->commit();\n});"},{"caption":"<p>Get a transaction to manage manually.<\/p>","code":"$transaction = $database->transaction();"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"src\/Spanner\/Transaction.php#L173","description":"","examples":[],"resources":[],"params":[{"name":"operation","description":"<p>The Operation instance.<\/p>","types":["<a data-custom-type=\"spanner\/operation\">Google\\Cloud\\Spanner\\Operation<\/a>"],"optional":false,"nullable":null},{"name":"session","description":"<p>The session to use for spanner interactions.<\/p>","types":["<a data-custom-type=\"spanner\/session\/session\">Google\\Cloud\\Spanner\\Session\\Session<\/a>"],"optional":false,"nullable":null},{"name":"transactionId","description":"<p>The Transaction ID. If no ID is\nprovided, the Transaction will be a Single-Use Transaction.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[]},{"id":"insert","type":"instance","name":"insert","source":"src\/Spanner\/Transaction.php#L207","description":"<p>Enqueue an insert mutation.<\/p>","examples":[{"caption":"","code":"$transaction->insert('Posts', [\n    'ID' => 10,\n    'title' => 'My New Post',\n    'content' => 'Hello World'\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to insert into.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>The data to insert.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"insertBatch","type":"instance","name":"insertBatch","source":"src\/Spanner\/Transaction.php#L230","description":"<p>Enqueue one or more insert mutations.<\/p>","examples":[{"caption":"","code":"$transaction->insertBatch('Posts', [\n    [\n        'ID' => 10,\n        'title' => 'My New Post',\n        'content' => 'Hello World'\n    ]\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to insert into.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The data to insert.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"update","type":"instance","name":"update","source":"src\/Spanner\/Transaction.php#L253","description":"<p>Enqueue an update mutation.<\/p>","examples":[{"caption":"","code":"$transaction->update('Posts', [\n    'ID' => 10,\n    'title' => 'My New Post [Updated!]',\n    'content' => 'Modified Content'\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>The data to update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"updateBatch","type":"instance","name":"updateBatch","source":"src\/Spanner\/Transaction.php#L276","description":"<p>Enqueue one or more update mutations.<\/p>","examples":[{"caption":"","code":"$transaction->updateBatch('Posts', [\n    [\n        'ID' => 10,\n        'title' => 'My New Post [Updated!]',\n        'content' => 'Modified Content'\n    ]\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The data to update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"insertOrUpdate","type":"instance","name":"insertOrUpdate","source":"src\/Spanner\/Transaction.php#L299","description":"<p>Enqueue an insert or update mutation.<\/p>","examples":[{"caption":"","code":"$transaction->insertOrUpdate('Posts', [\n    'ID' => 10,\n    'title' => 'My New Post',\n    'content' => 'Hello World'\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to insert into or update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>The data to insert or update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"insertOrUpdateBatch","type":"instance","name":"insertOrUpdateBatch","source":"src\/Spanner\/Transaction.php#L322","description":"<p>Enqueue one or more insert or update mutations.<\/p>","examples":[{"caption":"","code":"$transaction->insertOrUpdateBatch('Posts', [\n    [\n        'ID' => 10,\n        'title' => 'My New Post',\n        'content' => 'Hello World'\n    ]\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to insert into or update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The data to insert or update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"replace","type":"instance","name":"replace","source":"src\/Spanner\/Transaction.php#L345","description":"<p>Enqueue an replace mutation.<\/p>","examples":[{"caption":"","code":"$transaction->replace('Posts', [\n    'ID' => 10,\n    'title' => 'My New Post [Replaced]',\n    'content' => 'Hello Moon'\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to replace into.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"data","description":"<p>The data to replace.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"replaceBatch","type":"instance","name":"replaceBatch","source":"src\/Spanner\/Transaction.php#L368","description":"<p>Enqueue one or more replace mutations.<\/p>","examples":[{"caption":"","code":"$transaction->replaceBatch('Posts', [\n    [\n        'ID' => 10,\n        'title' => 'My New Post [Replaced]',\n        'content' => 'Hello Moon'\n    ]\n]);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to replace into.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The data to replace.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"delete","type":"instance","name":"delete","source":"src\/Spanner\/Transaction.php#L391","description":"<p>Enqueue an delete mutation.<\/p>","examples":[{"caption":"","code":"$keySet = new KeySet([\n    'keys' => [10]\n]);\n\n$transaction->delete('Posts', $keySet);"}],"resources":[],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"keySet","description":"<p>The KeySet to identify rows to delete.<\/p>","types":["<a data-custom-type=\"spanner\/keyset\">Google\\Cloud\\Spanner\\KeySet<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":"<p>The transaction, to enable method chaining.<\/p>"}]},{"id":"rollback","type":"instance","name":"rollback","source":"src\/Spanner\/Transaction.php#L417","description":"<p>Roll back a transaction.<\/p>\n<p>Rolls back a transaction, releasing any locks it holds. It is a good idea\nto call this for any transaction that includes one or more Read or\nExecuteSql requests and ultimately decides not to commit.<\/p>\n<p>This closes the transaction, preventing any future API calls inside it.<\/p>\n<p>Rollback will NOT error if the transaction is not found or was already aborted.<\/p>","examples":[{"caption":"","code":"$transaction->rollback();"}],"resources":[],"params":[{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.void\" target=\"_blank\">void<\/a>"],"description":""}]},{"id":"commit","type":"instance","name":"commit","source":"src\/Spanner\/Transaction.php#L455","description":"<p>Commit and end the transaction.<\/p>\n<p>It is advised that transactions be run inside\n<a data-custom-type=\"spanner\/database\" data-method=\"runTransaction\">Google\\Cloud\\Spanner\\Database::runTransaction()<\/a> in order to take\nadvantage of automated transaction retry in case of a transaction aborted\nerror.<\/p>","examples":[{"caption":"","code":"$transaction->commit();"}],"resources":[],"params":[{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.mutations","description":"<p>An array of mutations to commit. May be used instead of or in addition to enqueing mutations separately.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\BadMethodCall","description":"If the transaction is not active or already used."},{"type":"\\Google\\Cloud\\Core\\Exception\\AbortedException","description":"If the commit is aborted for any reason."}],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit timestamp.<\/p>"}]},{"id":"state","type":"instance","name":"state","source":"src\/Spanner\/Transaction.php#L493","description":"<p>Retrieve the Transaction State.<\/p>\n<p>Will be one of <code>Transaction::STATE_ACTIVE<\/code>,\n<code>Transaction::STATE_COMMITTED<\/code>, or <code>Transaction::STATE_ROLLED_BACK<\/code>.<\/p>","examples":[{"caption":"","code":"$state = $transaction->state();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"isRetry","type":"instance","name":"isRetry","source":"src\/Spanner\/Transaction.php#L516","description":"<p>Check whether the current transaction is a retry transaction.<\/p>\n<p>When using <a data-custom-type=\"spanner\/database\" data-method=\"runTransaction\">Google\\Cloud\\Spanner\\Database::runTransaction()<\/a>,\ntransactions are automatically retried when a conflict causes it to abort.\nIn such cases, subsequent invocations of the transaction callable will\nprovide a transaction where <code>$transaction-&gt;isRetry()<\/code> is true. This can\nbe useful for debugging and understanding how code is working.<\/p>","examples":[{"caption":"","code":"if ($transaction->isRetry()) {\n    echo 'This is a retry transaction!';\n}"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"description":""}]},{"id":"execute","type":"instance","name":"execute","source":"src\/Spanner\/TransactionalReadTrait.php#L90","description":"<p>Run a query.<\/p>\n\nImplemented in <a data-custom-type=\"spanner\/transactionalreadtrait\">Google\\Cloud\\Spanner\\TransactionalReadTrait<\/a>","examples":[],"resources":[],"params":[{"name":"sql","description":"<p>The query string to execute.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.parameters","description":"<p>A key\/value array of Query Parameters, where the key is represented in the query string prefixed by a <code>@<\/code> symbol.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.types","description":"<p>A key\/value array of Query Parameter types. Generally, Google Cloud PHP can infer types. Explicit type definitions are only necessary for null parameter values. Accepted values are defined as constants on <a data-custom-type=\"spanner\/valuemapper\">Google\\Cloud\\Spanner\\ValueMapper<\/a>, and are as follows: <code>Database::TYPE_BOOL<\/code>, <code>Database::TYPE_INT64<\/code>, <code>Database::TYPE_FLOAT64<\/code>, <code>Database::TYPE_TIMESTAMP<\/code>, <code>Database::TYPE_DATE<\/code>, <code>Database::TYPE_STRING<\/code>, <code>Database::TYPE_BYTES<\/code>, <code>Database::TYPE_ARRAY<\/code> and <code>Database::TYPE_STRUCT<\/code>. If the parameter type is an array, the type should be given as an array, where the first element is <code>Database::TYPE_ARRAY<\/code> and the second element is the array type, for instance <code>[Database::TYPE_ARRAY, Database::TYPE_INT64]<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/result\">Google\\Cloud\\Spanner\\Result<\/a>"],"description":""}]},{"id":"read","type":"instance","name":"read","source":"src\/Spanner\/TransactionalReadTrait.php#L119","description":"<p>Lookup rows in a table.<\/p>\n\nImplemented in <a data-custom-type=\"spanner\/transactionalreadtrait\">Google\\Cloud\\Spanner\\TransactionalReadTrait<\/a>","examples":[],"resources":[],"params":[{"name":"table","description":"<p>The table name.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"keySet","description":"<p>The KeySet to select rows.<\/p>","types":["<a data-custom-type=\"spanner\/keyset\">Google\\Cloud\\Spanner\\KeySet<\/a>"],"optional":false,"nullable":null},{"name":"columns","description":"<p>A list of column names to return.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.index","description":"<p>The name of an index on the table.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.limit","description":"<p>The number of results to return.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/result\">Google\\Cloud\\Spanner\\Result<\/a>"],"description":""}]},{"id":"id","type":"instance","name":"id","source":"src\/Spanner\/TransactionalReadTrait.php#L139","description":"<p>Retrieve the Transaction ID.<\/p>\n\nImplemented in <a data-custom-type=\"spanner\/transactionalreadtrait\">Google\\Cloud\\Spanner\\TransactionalReadTrait<\/a>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.null.php\" target=\"_blank\">null<\/a>"],"description":""}]},{"id":"type","type":"instance","name":"type","source":"src\/Spanner\/TransactionalReadTrait.php#L149","description":"<p>Get the Transaction Type.<\/p>\n\nImplemented in <a data-custom-type=\"spanner\/transactionalreadtrait\">Google\\Cloud\\Spanner\\TransactionalReadTrait<\/a>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"description":""}]},{"id":"execute","type":"instance","name":"execute","source":"src\/Spanner\/Transaction.php","description":"<p>Run a query.<\/p>\n<p>Note that this method is not available in a single-use transaction.<\/p>","examples":[{"caption":"","code":"$result = $transaction->execute(\n    'SELECT * FROM Users WHERE id = @userId',\n    [\n         'parameters' => [\n             'userId' => 1\n         ]\n     ]\n);\n\n$firstRow = $result\n    ->rows()\n    ->current();"}],"resources":[],"params":[{"name":"sql","description":"<p>The query string to execute.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.parameters","description":"<p>A key\/value array of Query Parameters, where the key is represented in the query string prefixed by a <code>@<\/code> symbol.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.types","description":"<p>A key\/value array of Query Parameter types. Generally, Google Cloud PHP can infer types. Explicit type definitions are only necessary for null parameter values. Accepted values are defined as constants on <a data-custom-type=\"spanner\/valuemapper\">Google\\Cloud\\Spanner\\ValueMapper<\/a>, and are as follows: <code>Database::TYPE_BOOL<\/code>, <code>Database::TYPE_INT64<\/code>, <code>Database::TYPE_FLOAT64<\/code>, <code>Database::TYPE_TIMESTAMP<\/code>, <code>Database::TYPE_DATE<\/code>, <code>Database::TYPE_STRING<\/code>, <code>Database::TYPE_BYTES<\/code>, <code>Database::TYPE_ARRAY<\/code> and <code>Database::TYPE_STRUCT<\/code>. If the parameter type is an array, the type should be given as an array, where the first element is <code>Database::TYPE_ARRAY<\/code> and the second element is the array type, for instance <code>[Database::TYPE_ARRAY, Database::TYPE_INT64]<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["\\Result"],"description":""}]},{"id":"read","type":"instance","name":"read","source":"src\/Spanner\/Transaction.php","description":"<p>Lookup rows in a table.<\/p>\n<p>Note that this method is not available in a single-use transaction.<\/p>","examples":[{"caption":"","code":"$keySet = new KeySet([\n    'keys' => [10]\n]);\n\n$columns = ['ID', 'title', 'content'];\n\n$result = $transaction->read('Posts', $keySet, $columns);\n\n$firstRow = $result\n    ->rows()\n    ->current();"}],"resources":[],"params":[{"name":"table","description":"<p>The table name.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"keySet","description":"<p>The KeySet to select rows.<\/p>","types":["\\KeySet"],"optional":false,"nullable":null},{"name":"columns","description":"<p>A list of column names to return.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.index","description":"<p>The name of an index on the table.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.offset","description":"<p>The number of rows to offset results by.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"options.limit","description":"<p>The number of results to return.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["\\Result"],"description":""}]},{"id":"id","type":"instance","name":"id","source":"src\/Spanner\/Transaction.php","description":"<p>Retrieve the Transaction ID.<\/p>","examples":[{"caption":"","code":"$id = $transaction->id();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":""}]}]}