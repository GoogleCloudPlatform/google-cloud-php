{"id":"spanner\/admin\/database\/v1\/gapic\/databaseadmingapicclient","type":"","title":"Google\\Cloud\\Spanner\\Admin\\Database\\V1\\Gapic\\DatabaseAdminGapicClient","name":"DatabaseAdminGapicClient","description":"<p>Service Description: Cloud Spanner Database Admin API.<\/p>\n<p>The Cloud Spanner Database Admin API can be used to create, drop, and\nlist databases. It also enables updating the schema of pre-existing\ndatabases.<\/p>\n<p>EXPERIMENTAL: this client library class has not yet been declared GA (1.0). This means that\neven though we intent the surface to be stable, we may make backwards incompatible changes\nif necessary.<\/p>\n<p>This class provides the ability to make remote calls to the backing service through method\ncalls that map to API methods. Sample code to get started:<\/p>\n<pre><code>try {\n    $databaseAdminClient = new DatabaseAdminClient();\n    $formattedParent = $databaseAdminClient-&gt;instanceName('[PROJECT]', '[INSTANCE]');\n    \/\/ Iterate through all elements\n    $pagedResponse = $databaseAdminClient-&gt;listDatabases($formattedParent);\n    foreach ($pagedResponse-&gt;iterateAllElements() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n\n    \/\/ OR iterate over pages of elements\n    $pagedResponse = $databaseAdminClient-&gt;listDatabases($formattedParent);\n    foreach ($pagedResponse-&gt;iteratePages() as $page) {\n        foreach ($page as $element) {\n            \/\/ doSomethingWith($element);\n        }\n    }\n} finally {\n    $databaseAdminClient-&gt;close();\n}<\/code><\/pre>\n<p>Many parameters require resource names to be formatted in a particular way. To assist\nwith these names, this class includes a format method for each type of name, and additionally\na parseName method to extract the individual identifiers contained within formatted names\nthat are returned by the API.<\/p>","examples":[],"resources":[],"methods":[{"id":"instanceName","type":"instance","name":"instanceName","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L223","description":"<p>Formats a string containing the fully-qualified path to represent\na instance resource.<\/p>","examples":[],"resources":[],"params":[{"name":"project","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"instance","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The formatted instance resource.<\/p>"}]},{"id":"databaseName","type":"instance","name":"databaseName","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L242","description":"<p>Formats a string containing the fully-qualified path to represent\na database resource.<\/p>","examples":[],"resources":[],"params":[{"name":"project","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"instance","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"database","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The formatted database resource.<\/p>"}]},{"id":"parseName","type":"instance","name":"parseName","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L271","description":"<p>Parses a formatted name string and returns an associative array of the components in the name.<\/p>\n<p>The following name formats are supported:\nTemplate: Pattern<\/p>\n<ul>\n<li>instance: projects\/{project}\/instances\/{instance}<\/li>\n<li>database: projects\/{project}\/instances\/{instance}\/databases\/{database}.<\/li>\n<\/ul>\n<p>The optional $template argument can be supplied to specify a particular pattern, and must\nmatch one of the templates listed above. If no $template argument is provided, or if the\n$template argument does not match one of the templates listed, then parseName will check\neach of the supported templates, and return the first match.<\/p>","examples":[],"resources":[],"params":[{"name":"formattedName","description":"<p>The formatted name string<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"template","description":"<p>Optional name of template to match<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ValidationException","description":"If $formattedName could not be matched."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p>An associative array from name component IDs to component values.<\/p>"}]},{"id":"getOperationsClient","type":"instance","name":"getOperationsClient","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L299","description":"<p>Return an OperationsClient object with the same endpoint as $this.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/LongRunning\\OperationsClient.html\" target=\"_blank\">Google\\ApiCore\\LongRunning\\OperationsClient<\/a>"],"description":""}]},{"id":"resumeOperation","type":"instance","name":"resumeOperation","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L317","description":"<p>Resume an existing long running operation that was previously started\nby a long running API method. If $methodName is not provided, or does\nnot match a long running API method, then the operation can still be\nresumed, but the OperationResponse object will not deserialize the\nfinal response.<\/p>","examples":[],"resources":[],"params":[{"name":"operationName","description":"<p>The name of the long running operation<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"methodName","description":"<p>The name of the method used to start the operation<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"__construct","type":"constructor","name":"__construct","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L372","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"options","description":"<p>Optional. Options for configuring the service API wrapper.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.serviceAddress","description":"<p>The domain name of the API remote host. Default 'spanner.googleapis.com'.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.port","description":"<p>The port on which to connect to the remote host. Default 443.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.mixed\" target=\"_blank\">mixed<\/a>"],"optional":null,"nullable":null},{"name":"options.channel\n","description":"<p>A <code>Channel<\/code> object to be used by gRPC. If not specified, a channel will be constructed.<\/p>","types":["\\Grpc\\Channel"],"optional":null,"nullable":null},{"name":"options.sslCreds\n","description":"<p>A <code>ChannelCredentials<\/code> object for use with an SSL-enabled channel. Default: a credentials object returned from \\Grpc\\ChannelCredentials::createSsl() NOTE: if the $channel optional argument is specified, then this argument is unused.<\/p>","types":["\\Grpc\\ChannelCredentials"],"optional":null,"nullable":null},{"name":"options.forceNewChannel\n","description":"<p>If true, this forces gRPC to create a new channel instead of using a persistent channel. Defaults to false. NOTE: if the $channel optional argument is specified, then this option is unused.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"options.credentialsLoader\n","description":"<p>A CredentialsLoader object created using the Google\\Auth library.<\/p>","types":["<a href=\"https:\/\/github.com\/google\/google-auth-library-php\/blob\/master\/src\/CredentialsLoader.php\" target=\"_blank\">Google\\Auth\\CredentialsLoader<\/a>"],"optional":null,"nullable":null},{"name":"options.scopes","description":"<p>A string array of scopes to use when acquiring credentials. Defaults to the scopes for the Cloud Spanner Database Admin API.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.clientConfigPath\n","description":"<p>Path to a JSON file containing client method configuration, including retry settings. Specify this setting to specify the retry behavior of all methods on the client. By default this settings points to the default client config file, which is provided in the resources folder. The retry settings provided in this option can be overridden by settings in $retryingOverride<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.retryingOverride\n","description":"<p>An associative array in which the keys are method names (e.g. 'createFoo'), and the values are retry settings to use for that method. The retry settings for each method can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage. Passing a value of null is equivalent to a value of ['retriesEnabled' =&gt; false]. Retry settings provided in this setting override the settings in $clientConfigPath.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"listDatabases","type":"instance","name":"listDatabases","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L504","description":"<p>Lists Cloud Spanner databases.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $databaseAdminClient = new DatabaseAdminClient();\n    $formattedParent = $databaseAdminClient-&gt;instanceName('[PROJECT]', '[INSTANCE]');\n    \/\/ Iterate through all elements\n    $pagedResponse = $databaseAdminClient-&gt;listDatabases($formattedParent);\n    foreach ($pagedResponse-&gt;iterateAllElements() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n\n    \/\/ OR iterate over pages of elements\n    $pagedResponse = $databaseAdminClient-&gt;listDatabases($formattedParent);\n    foreach ($pagedResponse-&gt;iteratePages() as $page) {\n        foreach ($page as $element) {\n            \/\/ doSomethingWith($element);\n        }\n    }\n} finally {\n    $databaseAdminClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"parent","description":"<p>Required. The instance whose databases should be listed.\nValues are of the form <code>projects\/&lt;project&gt;\/instances\/&lt;instance&gt;<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.pageSize\n","description":"<p>The maximum number of resources contained in the underlying API response. The API may return fewer values in a page, even if there are additional values to be retrieved.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.pageToken\n","description":"<p>A page token is used to specify a page of values to be returned. If no page token is specified (the default), the first page of values will be returned. Any page token used here must have been generated by a previous call to the API.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/PagedListResponse.html\" target=\"_blank\">Google\\ApiCore\\PagedListResponse<\/a>"],"description":""}]},{"id":"createDatabase","type":"instance","name":"createDatabase","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L609","description":"<p>Creates a new Cloud Spanner database and starts to prepare it for serving.<\/p>\n<p>The returned [long-running operation][google.longrunning.Operation] will\nhave a name of the format <code>&lt;database_name&gt;\/operations\/&lt;operation_id&gt;<\/code> and\ncan be used to track preparation of the database. The\n[metadata][google.longrunning.Operation.metadata] field type is\n[CreateDatabaseMetadata][google.spanner.admin.database.v1.CreateDatabaseMetadata]. The\n[response][google.longrunning.Operation.response] field type is\n[Database][google.spanner.admin.database.v1.Database], if successful.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $databaseAdminClient = new DatabaseAdminClient();\n    $formattedParent = $databaseAdminClient-&gt;instanceName('[PROJECT]', '[INSTANCE]');\n    $createStatement = '';\n    $operationResponse = $databaseAdminClient-&gt;createDatabase($formattedParent, $createStatement);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n      $result = $operationResponse-&gt;getResult();\n      \/\/ doSomethingWith($result)\n    } else {\n      $error = $operationResponse-&gt;getError();\n      \/\/ handleError($error)\n    }\n\n    \/\/ OR start the operation, keep the operation name, and resume later\n    $operationResponse = $databaseAdminClient-&gt;createDatabase($formattedParent, $createStatement);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $databaseAdminClient-&gt;resumeOperation($operationName, 'createDatabase');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n      $result = $newOperationResponse-&gt;getResult();\n      \/\/ doSomethingWith($result)\n    } else {\n      $error = $newOperationResponse-&gt;getError();\n      \/\/ handleError($error)\n    }\n} finally {\n    $databaseAdminClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"parent","description":"<p>Required. The name of the instance that will serve the new database.\nValues are of the form <code>projects\/&lt;project&gt;\/instances\/&lt;instance&gt;<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"createStatement","description":"<p>Required. A <code>CREATE DATABASE<\/code> statement, which specifies the ID of the\nnew database.  The database ID must conform to the regular expression\n<code>[a-z][a-z0-9_\\-]*[a-z0-9]<\/code> and be between 2 and 30 characters in length.\nIf the database ID is a reserved word or if it contains a hyphen, the\ndatabase ID must be enclosed in backticks (<code>`<\/code>).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.extraStatements\n","description":"<p>An optional list of DDL statements to run inside the newly created database. Statements can create tables, indexes, etc. These statements execute atomically with the creation of the database: if there is an error in any statement, the database is not created.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"getDatabase","type":"instance","name":"getDatabase","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L669","description":"<p>Gets the state of a Cloud Spanner database.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $databaseAdminClient = new DatabaseAdminClient();\n    $formattedName = $databaseAdminClient-&gt;databaseName('[PROJECT]', '[INSTANCE]', '[DATABASE]');\n    $response = $databaseAdminClient-&gt;getDatabase($formattedName);\n} finally {\n    $databaseAdminClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"name","description":"<p>Required. The name of the requested database. Values are of the form\n<code>projects\/&lt;project&gt;\/instances\/&lt;instance&gt;\/databases\/&lt;database&gt;<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Spanner\\Admin\\Database\\V1\\Database.html\" target=\"_blank\">Google\\Cloud\\Spanner\\Admin\\Database\\V1\\Database<\/a>"],"description":""}]},{"id":"updateDatabaseDdl","type":"instance","name":"updateDatabaseDdl","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L775","description":"<p>Updates the schema of a Cloud Spanner database by\ncreating\/altering\/dropping tables, columns, indexes, etc. The returned\n[long-running operation][google.longrunning.Operation] will have a name of\nthe format <code>&lt;database_name&gt;\/operations\/&lt;operation_id&gt;<\/code> and can be used to\ntrack execution of the schema change(s). The\n[metadata][google.longrunning.Operation.metadata] field type is\n[UpdateDatabaseDdlMetadata][google.spanner.admin.database.v1.UpdateDatabaseDdlMetadata].  The operation has no response.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $databaseAdminClient = new DatabaseAdminClient();\n    $formattedDatabase = $databaseAdminClient-&gt;databaseName('[PROJECT]', '[INSTANCE]', '[DATABASE]');\n    $statements = [];\n    $operationResponse = $databaseAdminClient-&gt;updateDatabaseDdl($formattedDatabase, $statements);\n    $operationResponse-&gt;pollUntilComplete();\n    if ($operationResponse-&gt;operationSucceeded()) {\n      \/\/ operation succeeded and returns no value\n    } else {\n      $error = $operationResponse-&gt;getError();\n      \/\/ handleError($error)\n    }\n\n    \/\/ OR start the operation, keep the operation name, and resume later\n    $operationResponse = $databaseAdminClient-&gt;updateDatabaseDdl($formattedDatabase, $statements);\n    $operationName = $operationResponse-&gt;getName();\n    \/\/ ... do other work\n    $newOperationResponse = $databaseAdminClient-&gt;resumeOperation($operationName, 'updateDatabaseDdl');\n    while (!$newOperationResponse-&gt;isDone()) {\n        \/\/ ... do other work\n        $newOperationResponse-&gt;reload();\n    }\n    if ($newOperationResponse-&gt;operationSucceeded()) {\n      \/\/ operation succeeded and returns no value\n    } else {\n      $error = $newOperationResponse-&gt;getError();\n      \/\/ handleError($error)\n    }\n} finally {\n    $databaseAdminClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"database","description":"<p>Required. The database to update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"statements","description":"<p>DDL statements to be applied to the database.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.operationId\n","description":"<p>If empty, the new update request is assigned an automatically-generated operation ID. Otherwise, <code>operation_id<\/code> is used to construct the name of the resulting [Operation][google.longrunning.Operation]. Specifying an explicit operation ID simplifies determining whether the statements were executed in the event that the [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl] call is replayed, or the return value is otherwise lost: the [database][google.spanner.admin.database.v1.UpdateDatabaseDdlRequest.database] and <code>operation_id<\/code> fields can be combined to form the [name][google.longrunning.Operation.name] of the resulting [longrunning.Operation][google.longrunning.Operation]: <code>&lt;database&gt;\/operations\/&lt;operation_id&gt;<\/code>. <code>operation_id<\/code> should be unique within the database, and must be a valid identifier: <code>[a-z][a-z0-9_]*<\/code>. Note that automatically-generated operation IDs always begin with an underscore. If the named operation already exists, [UpdateDatabaseDdl][google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl] returns <code>ALREADY_EXISTS<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/OperationResponse.html\" target=\"_blank\">Google\\ApiCore\\OperationResponse<\/a>"],"description":""}]},{"id":"dropDatabase","type":"instance","name":"dropDatabase","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L832","description":"<p>Drops (aka deletes) a Cloud Spanner database.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $databaseAdminClient = new DatabaseAdminClient();\n    $formattedDatabase = $databaseAdminClient-&gt;databaseName('[PROJECT]', '[INSTANCE]', '[DATABASE]');\n    $databaseAdminClient-&gt;dropDatabase($formattedDatabase);\n} finally {\n    $databaseAdminClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"database","description":"<p>Required. The database to be dropped.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[]},{"id":"getDatabaseDdl","type":"instance","name":"getDatabaseDdl","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L889","description":"<p>Returns the schema of a Cloud Spanner database as a list of formatted\nDDL statements. This method does not show pending schema updates, those may\nbe queried using the [Operations][google.longrunning.Operations] API.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $databaseAdminClient = new DatabaseAdminClient();\n    $formattedDatabase = $databaseAdminClient-&gt;databaseName('[PROJECT]', '[INSTANCE]', '[DATABASE]');\n    $response = $databaseAdminClient-&gt;getDatabaseDdl($formattedDatabase);\n} finally {\n    $databaseAdminClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"database","description":"<p>Required. The database whose schema we wish to get.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Spanner\\Admin\\Database\\V1\\GetDatabaseDdlResponse.html\" target=\"_blank\">Google\\Cloud\\Spanner\\Admin\\Database\\V1\\GetDatabaseDdlResponse<\/a>"],"description":""}]},{"id":"setIamPolicy","type":"instance","name":"setIamPolicy","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L955","description":"<p>Sets the access control policy on a database resource. Replaces any\nexisting policy.<\/p>\n<p>Authorization requires <code>spanner.databases.setIamPolicy<\/code> permission on\n[resource][google.iam.v1.SetIamPolicyRequest.resource].<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $databaseAdminClient = new DatabaseAdminClient();\n    $formattedResource = $databaseAdminClient-&gt;databaseName('[PROJECT]', '[INSTANCE]', '[DATABASE]');\n    $policy = new Policy();\n    $response = $databaseAdminClient-&gt;setIamPolicy($formattedResource, $policy);\n} finally {\n    $databaseAdminClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"resource","description":"<p>REQUIRED: The resource for which the policy is being specified.\n<code>resource<\/code> is usually specified as a path. For example, a Project\nresource is specified as <code>projects\/{project}<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"policy","description":"<p>REQUIRED: The complete policy to be applied to the <code>resource<\/code>. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Iam\\V1\\Policy.html\" target=\"_blank\">Google\\Cloud\\Iam\\V1\\Policy<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Iam\\V1\\Policy.html\" target=\"_blank\">Google\\Cloud\\Iam\\V1\\Policy<\/a>"],"description":""}]},{"id":"getIamPolicy","type":"instance","name":"getIamPolicy","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L1017","description":"<p>Gets the access control policy for a database resource. Returns an empty\npolicy if a database exists but does not have a policy set.<\/p>\n<p>Authorization requires <code>spanner.databases.getIamPolicy<\/code> permission on\n[resource][google.iam.v1.GetIamPolicyRequest.resource].<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $databaseAdminClient = new DatabaseAdminClient();\n    $formattedResource = $databaseAdminClient-&gt;databaseName('[PROJECT]', '[INSTANCE]', '[DATABASE]');\n    $response = $databaseAdminClient-&gt;getIamPolicy($formattedResource);\n} finally {\n    $databaseAdminClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"resource","description":"<p>REQUIRED: The resource for which the policy is being requested.\n<code>resource<\/code> is usually specified as a path. For example, a Project\nresource is specified as <code>projects\/{project}<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Iam\\V1\\Policy.html\" target=\"_blank\">Google\\Cloud\\Iam\\V1\\Policy<\/a>"],"description":""}]},{"id":"testIamPermissions","type":"instance","name":"testIamPermissions","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L1084","description":"<p>Returns permissions that the caller has on the specified database resource.<\/p>\n<p>Attempting this RPC on a non-existent Cloud Spanner database will result in\na NOT_FOUND error if the user has <code>spanner.databases.list<\/code> permission on\nthe containing Cloud Spanner instance. Otherwise returns an empty set of\npermissions.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $databaseAdminClient = new DatabaseAdminClient();\n    $formattedResource = $databaseAdminClient-&gt;databaseName('[PROJECT]', '[INSTANCE]', '[DATABASE]');\n    $permissions = [];\n    $response = $databaseAdminClient-&gt;testIamPermissions($formattedResource, $permissions);\n} finally {\n    $databaseAdminClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"resource","description":"<p>REQUIRED: The resource for which the policy detail is being requested.\n<code>resource<\/code> is usually specified as a path. For example, a Project\nresource is specified as <code>projects\/{project}<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"permissions","description":"<p>The set of permissions to check for the <code>resource<\/code>. Permissions with\nwildcards (such as '<em>' or 'storage.<\/em>') are not allowed. For more\ninformation see\n<a href=\"https:\/\/cloud.google.com\/iam\/docs\/overview#permissions\">IAM Overview<\/a>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Iam\\V1\\TestIamPermissionsResponse.html\" target=\"_blank\">Google\\Cloud\\Iam\\V1\\TestIamPermissionsResponse<\/a>"],"description":""}]},{"id":"close","type":"instance","name":"close","source":"src\/Spanner\/Admin\/Database\/V1\/Gapic\/DatabaseAdminGapicClient.php#L1116","description":"<p>Initiates an orderly shutdown in which preexisting calls continue but new\ncalls are immediately cancelled.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]}]}