{"id":"trace\/requesttracer","type":"","title":"Google\\Cloud\\Trace\\RequestTracer","name":"RequestTracer","description":"<p>This class provides static functions to give you access to the current\nrequest's singleton tracer. You should use this class to instrument your code.<\/p>\n<p>The first step, is to configure and start your <code>RequestTracer<\/code>. Calling <code>start<\/code>\nwill collect trace data during your request and report the results at the\nrequest using the provided reporter.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Trace\\RequestTracer;\nuse Google\\Cloud\\Trace\\TraceClient;\nuse Google\\Cloud\\Trace\\Reporter\\SyncReporter;\n\n$trace = new TraceClient();\n$reporter = new SyncReporter($trace);\nRequestTracer::start($reporter);"},{"caption":"","code":"In the above example, every request is traced. This is not advised as it will\nadd some latency to each request. We provide a sampling mechanism via the\n{@see Google\\Cloud\\Trace\\Sampler\\SamplerInterface}. To add sampling to your\nrequest tracer, provide the \"sampler\" option:"},{"caption":"<p>$cache is a PSR-6 cache implementation<\/p>","code":"$sampler = new QpsSampler($cache, ['rate' => 0.1]);\nRequestTracer::start($reporter, [\n    'sampler' => $sampler\n]);"},{"caption":"","code":"The above uses a query-per-second sampler at 0.1 requests\/second. The implementation\nrequires a PSR-6 cache. See {@see Google\\Cloud\\Trace\\Sampler\\QpsSampler} for more information.\nYou may provide your own implementation of {@see Google\\Cloud\\Trace\\Sampler\\SamplerInterface}\nor use one of the provided. You may provide a configuration array for the sampler instead. See\n{@see Google\\Cloud\\Trace\\Sampler\\SamplerFactory::build()} for builder options:"},{"caption":"<p>$cache is a PSR-6 cache implementation<\/p>","code":"RequestTracer::start($reporter, [\n    'sampler' => [\n        'type' => 'qps',\n        'rate' => 0.1,\n        'cache' => $cache\n    ]\n]);"},{"caption":"","code":"To trace code, you can use static {@see Google\\Cloud\\Trace\\RequestTracer::inSpan()} helper function:"},{"caption":"","code":"RequestTracer::start($reporter);\nRequestTracer::inSpan(['name' => 'outer'], function () {\n    \/\/ some code\n    RequestTracer::inSpan(['name' => 'inner'], function () {\n        \/\/ some code\n    });\n    \/\/ some code\n});"},{"caption":"","code":"You can also start and finish spans independently throughout your code.\n\nExplicitly tracing spans:"},{"caption":"","code":"RequestTracer::start($reporter);\nRequestTracer::startSpan(['name' => 'expensive-operation']);\ntry {\n    \/\/ do expensive operation\n} catch (\\Exception $e) {\n    RequestTracer::endSpan();\n}"},{"caption":"","code":"It is recommended that you use the {@see Google\\Cloud\\Trace\\RequestTracer::inSpan()}\nmethod where you can. An uncaught exception between {@see Google\\Cloud\\Trace\\RequestTracer::startSpan()}\nand {@see Google\\Cloud\\Trace\\RequestTracer::endSpan()} may not correctly close spans."}],"resources":[],"methods":[{"id":"start","type":"instance","name":"start","source":"src\/Trace\/RequestTracer.php#L124","description":"<p>Start a new trace session for this request. You should call this as early as\npossible for the most accurate results.<\/p>","examples":[],"resources":[],"params":[{"name":"reporter","description":"","types":["<a data-custom-type=\"trace\/reporter\/reporterinterface\">Google\\Cloud\\Trace\\Reporter\\ReporterInterface<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options. See\n<a data-custom-type=\"trace\/tracespan\" data-method=\"__construct\">Google\\Cloud\\Trace\\TraceSpan::__construct()<\/a> for the other available options.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options.sampler","description":"<p>Sampler or sampler factory build arguments. See <a data-custom-type=\"trace\/sampler\/samplerfactory\" data-method=\"build\">Google\\Cloud\\Trace\\Sampler\\SamplerFactory::build()<\/a> for the available options.<\/p>","types":["SamplerInterface","array"],"optional":null,"nullable":null},{"name":"options.headers","description":"<p>Optional array of headers to use in place of $_SERVER<\/p>","types":["array"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"trace\/requesthandler\">Google\\Cloud\\Trace\\RequestHandler<\/a>"],"description":""}]},{"id":"inSpan","type":"instance","name":"inSpan","source":"src\/Trace\/RequestTracer.php#L162","description":"<p>Instrument a callable by creating a TraceSpan that manages the startTime and endTime.<\/p>\n<p>If an exception is thrown while executing the callable, the exception will be caught,\nthe span will be closed, and the exception will be re-thrown.<\/p>","examples":[{"caption":"<p>Instrumenting code as a closure<\/p>","code":"RequestTracer::inSpan(['name' => 'some-closure'], function () {\n  \/\/ do something expensive\n});"},{"caption":"<p>Instrumenting code as a callable (parameters optional)<\/p>","code":"function fib($n) {\n  \/\/ do something expensive\n}\n$number = RequestTracer::inSpan(['name' => 'some-callable'], 'fib', [10]);"}],"resources":[],"params":[{"name":"spanOptions","description":"<p>Options for the span.\n<a data-custom-type=\"trace\/tracespan\" data-method=\"__construct\">Google\\Cloud\\Trace\\TraceSpan::__construct()<\/a><\/p>","types":["array"],"optional":false,"nullable":null},{"name":"callable","description":"<p>The callable to inSpan.<\/p>","types":["callable"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["mixed"],"description":"<p>Returns whatever the callable returns<\/p>"}]},{"id":"startSpan","type":"instance","name":"startSpan","source":"src\/Trace\/RequestTracer.php#L184","description":"<p>Explicitly start a new TraceSpan. You will need to manage finishing the TraceSpan,\nincluding handling any thrown exceptions.<\/p>","examples":[{"caption":"","code":"RequestTracer::startSpan(['name' => 'expensive-operation']);\ntry {\n    \/\/ do something expensive\n} catch (\\Exception $e) {\n    RequestTracer::endSpan();\n}"}],"resources":[],"params":[{"name":"spanOptions","description":"<p>Options for the span.\n<a data-custom-type=\"trace\/tracespan\" data-method=\"__construct\">Google\\Cloud\\Trace\\TraceSpan::__construct()<\/a><\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[]},{"id":"endSpan","type":"instance","name":"endSpan","source":"src\/Trace\/RequestTracer.php#L192","description":"<p>Explicitly finish the current context (TraceSpan).<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"context","type":"instance","name":"context","source":"src\/Trace\/RequestTracer.php#L202","description":"<p>Return the current context<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"trace\/tracecontext\">Google\\Cloud\\Trace\\TraceContext<\/a>"],"description":""}]},{"id":"instance","type":"instance","name":"instance","source":"src\/Trace\/RequestTracer.php#L212","description":"<p>Returns the RequestHandler instance<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"trace\/requesthandler\">Google\\Cloud\\Trace\\RequestHandler<\/a>"],"description":""}]}]}