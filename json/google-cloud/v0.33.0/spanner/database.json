{"id":"spanner\/database","type":"","title":"Google\\Cloud\\Spanner\\Database","name":"Database","description":"<p>Represents a Cloud Spanner Database.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Spanner\\SpannerClient;\n\n$spanner = new SpannerClient();\n\n$database = $spanner->connect('my-instance', 'my-database');"},{"caption":"<p>Databases can also be connected to via an Instance.<\/p>","code":"use Google\\Cloud\\Spanner\\SpannerClient;\n\n$spanner = new SpannerClient();\n\n$instance = $spanner->instance('my-instance');\n$database = $instance->database('my-database');"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"src\/Spanner\/Database.php#L178","description":"<p>Create an object representing a Database.<\/p>","examples":[],"resources":[],"params":[{"name":"connection","description":"<p>The connection to the\nCloud Spanner Admin API.<\/p>","types":["<a data-custom-type=\"spanner\/connection\/connectioninterface\">Google\\Cloud\\Spanner\\Connection\\ConnectionInterface<\/a>"],"optional":false,"nullable":null},{"name":"instance","description":"<p>The instance in which the database exists.<\/p>","types":["<a data-custom-type=\"spanner\/instance\">Google\\Cloud\\Spanner\\Instance<\/a>"],"optional":false,"nullable":null},{"name":"lroConnection","description":"<p>An implementation\nmapping to methods which handle LRO resolution in the service.<\/p>","types":["<a data-custom-type=\"core\/longrunning\/longrunningconnectioninterface\">Google\\Cloud\\Core\\LongRunning\\LongRunningConnectionInterface<\/a>"],"optional":false,"nullable":null},{"name":"projectId","description":"<p>The project ID.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"name","description":"<p>The database name or ID.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"sessionPool","description":"<p>The session pool\nimplementation.<\/p>","types":["<a data-custom-type=\"spanner\/session\/sessionpoolinterface\">Google\\Cloud\\Spanner\\Session\\SessionPoolInterface<\/a>"],"optional":true,"nullable":null},{"name":"returnInt64AsObject","description":"<p>[optional If true, 64 bit integers will\nbe returned as a <a data-custom-type=\"core\/int64\">Google\\Cloud\\Core\\Int64<\/a> object for 32 bit\nplatform compatibility. <strong>Defaults to<\/strong> false.<\/p>","types":["bool"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"name","type":"instance","name":"name","source":"src\/Spanner\/Database.php#L212","description":"<p>Return the fully-qualified database name.<\/p>","examples":[{"caption":"","code":"$name = $database->name();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["string"],"description":""}]},{"id":"info","type":"instance","name":"info","source":"src\/Spanner\/Database.php#L232","description":"<p>Get the database info<\/p>","examples":[{"caption":"","code":"$info = $database->info();"}],"resources":[{"title":"Database","link":"https:\/\/cloud.google.com\/spanner\/docs\/reference\/rpc\/google.spanner.admin.database.v1#google.spanner.admin.database.v1.Database"}],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["array"],"description":""}]},{"id":"reload","type":"instance","name":"reload","source":"src\/Spanner\/Database.php#L252","description":"<p>Reload the database info from the Cloud Spanner API.<\/p>","examples":[{"caption":"","code":"$info = $database->reload();"}],"resources":[{"title":"Database","link":"https:\/\/cloud.google.com\/spanner\/docs\/reference\/rpc\/google.spanner.admin.database.v1#google.spanner.admin.database.v1.Database"}],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["array"],"description":""}]},{"id":"exists","type":"instance","name":"exists","source":"src\/Spanner\/Database.php#L276","description":"<p>Check if the database exists.<\/p>\n<p>This method sends a service request.<\/p>\n<p><strong>NOTE<\/strong>: Requires <code>https:\/\/www.googleapis.com\/auth\/spanner.admin<\/code> scope.<\/p>","examples":[{"caption":"","code":"if ($database->exists()) {\n    echo 'Database exists!';\n}"}],"resources":[],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["bool"],"description":""}]},{"id":"create","type":"instance","name":"create","source":"src\/Spanner\/Database.php#L306","description":"<p>Create a new Cloud Spanner database.<\/p>","examples":[{"caption":"","code":"$operation = $database->create();"}],"resources":[{"title":"CreateDatabaseRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.admin.database.v1#createdatabaserequest"}],"params":[{"name":"options","description":"<p>Configuration Options<\/p>","types":["array"],"optional":true,"nullable":null},{"name":"options.statements","description":"<p>Additional DDL statements.<\/p>","types":["string[]"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"core\/longrunning\/longrunningoperation\">Google\\Cloud\\Core\\LongRunning\\LongRunningOperation<\/a>&lt;Database&gt;"],"description":""}]},{"id":"updateDdl","type":"instance","name":"updateDdl","source":"src\/Spanner\/Database.php#L348","description":"<p>Update the Database schema by running a SQL statement.<\/p>\n<p><strong>NOTE<\/strong>: Requires <code>https:\/\/www.googleapis.com\/auth\/spanner.admin<\/code> scope.<\/p>","examples":[{"caption":"","code":"$database->updateDdl(\n    'CREATE TABLE Users (\n        id INT64 NOT NULL,\n        name STRING(100) NOT NULL\n        password STRING(100) NOT NULL\n    )'\n);"}],"resources":[{"title":"Data Definition Language","link":"https:\/\/cloud.google.com\/spanner\/docs\/data-definition-language"},{"title":"UpdateDDLRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.admin.database.v1#google.spanner.admin.database.v1.UpdateDatabaseDdlRequest"}],"params":[{"name":"statement","description":"<p>A DDL statements to run against a database.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"core\/longrunning\/longrunningoperation\">Google\\Cloud\\Core\\LongRunning\\LongRunningOperation<\/a>"],"description":""}]},{"id":"updateDdlBatch","type":"instance","name":"updateDdlBatch","source":"src\/Spanner\/Database.php#L383","description":"<p>Update the Database schema by running a set of SQL statements.<\/p>\n<p><strong>NOTE<\/strong>: Requires <code>https:\/\/www.googleapis.com\/auth\/spanner.admin<\/code> scope.<\/p>","examples":[{"caption":"","code":"$database->updateDdlBatch([\n    'CREATE TABLE Users (\n        id INT64 NOT NULL,\n        name STRING(100) NOT NULL,\n        password STRING(100) NOT NULL\n    ) PRIMARY KEY (id)',\n    'CREATE TABLE Posts (\n        id INT64 NOT NULL,\n        title STRING(100) NOT NULL,\n        content STRING(MAX) NOT NULL\n    ) PRIMARY KEY(id)'\n]);"}],"resources":[{"title":"Data Definition Language","link":"https:\/\/cloud.google.com\/spanner\/docs\/data-definition-language"},{"title":"UpdateDDLRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.admin.database.v1#google.spanner.admin.database.v1.UpdateDatabaseDdlRequest"}],"params":[{"name":"statements","description":"<p>A list of DDL statements to run against a database.<\/p>","types":["string[]"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"core\/longrunning\/longrunningoperation\">Google\\Cloud\\Core\\LongRunning\\LongRunningOperation<\/a>"],"description":""}]},{"id":"drop","type":"instance","name":"drop","source":"src\/Spanner\/Database.php#L410","description":"<p>Drop the database.<\/p>\n<p><strong>NOTE<\/strong>: Requires <code>https:\/\/www.googleapis.com\/auth\/spanner.admin<\/code> scope.<\/p>","examples":[{"caption":"","code":"$database->drop();"}],"resources":[{"title":"DropDatabaseRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.admin.database.v1#google.spanner.admin.database.v1.DropDatabaseRequest"}],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["void"],"description":""}]},{"id":"ddl","type":"instance","name":"ddl","source":"src\/Spanner\/Database.php#L434","description":"<p>Get a list of all database DDL statements.<\/p>\n<p><strong>NOTE<\/strong>: Requires <code>https:\/\/www.googleapis.com\/auth\/spanner.admin<\/code> scope.<\/p>","examples":[{"caption":"","code":"$statements = $database->ddl();"}],"resources":[{"title":"GetDatabaseDdlRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.admin.database.v1#getdatabaseddlrequest"}],"params":[{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["array"],"description":""}]},{"id":"iam","type":"instance","name":"iam","source":"src\/Spanner\/Database.php#L457","description":"<p>Manage the database IAM policy<\/p>","examples":[{"caption":"","code":"$iam = $database->iam();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"core\/iam\/iam\">Google\\Cloud\\Core\\Iam\\Iam<\/a>"],"description":""}]},{"id":"snapshot","type":"instance","name":"snapshot","source":"src\/Spanner\/Database.php#L530","description":"<p>Create a snapshot to read from a database at a point in time.<\/p>\n<p>If no configuration options are provided, transaction will be opened with\nstrong consistency.<\/p>\n<p>Snapshots are executed behind the scenes using a Read-Only Transaction.<\/p>","examples":[{"caption":"","code":"$snapshot = $database->snapshot();"},{"caption":"<p>Take a shapshot with a returned timestamp.<\/p>","code":"$snapshot = $database->snapshot([\n    'returnReadTimestamp' => true\n]);\n\n$timestamp = $snapshot->readTimestamp();"}],"resources":[{"title":"BeginTransactionRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.BeginTransactionRequest"},{"title":"Transactions","link":"https:\/\/cloud.google.com\/spanner\/docs\/transactions"}],"params":[{"name":"options","description":"<p>Configuration Options<\/p>\n<pre><code>See [ReadOnly](https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.TransactionOptions.ReadOnly)\nfor detailed description of available options.\n\nPlease note that only one of `$strong`, `$readTimestamp` or\n`$exactStaleness` may be set in a request.<\/code><\/pre>","types":["array"],"optional":true,"nullable":null},{"name":"options.returnReadTimestamp","description":"<p>If true, the Cloud Spanner-selected read timestamp is included in the Transaction message that describes the transaction.<\/p>","types":["bool"],"optional":null,"nullable":null},{"name":"options.strong","description":"<p>Read at a timestamp where all previously committed transactions are visible.<\/p>","types":["bool"],"optional":null,"nullable":null},{"name":"options.readTimestamp","description":"<p>Executes all reads at the given timestamp.<\/p>","types":["Timestamp"],"optional":null,"nullable":null},{"name":"options.exactStaleness","description":"<p>Represents a number of seconds. Executes all reads at a timestamp that is $exactStaleness old.<\/p>","types":["Duration"],"optional":null,"nullable":null},{"name":"options.minReadTimestamp","description":"<p>Executes all reads at a timestamp &gt;= min_read_timestamp. Only available when <code>$options.singleUse<\/code> is true.<\/p>","types":["Timestamp"],"optional":null,"nullable":null},{"name":"options.maxStaleness","description":"<p>Read data at a timestamp &gt;= NOW - max_staleness seconds. Guarantees that all writes that have committed more than the specified number of seconds ago are visible. Only available when <code>$options.singleUse<\/code> is true.<\/p>","types":["Duration"],"optional":null,"nullable":null},{"name":"options.singleUse","description":"<p>If true, a Transaction ID will not be allocated up front. Instead, the transaction will be considered &quot;single-use&quot;, and may be used for only a single operation. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["bool"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\BadMethodCallException","description":"If attempting to call this method within\n        an existing transaction."}],"returns":[{"types":["<a data-custom-type=\"spanner\/snapshot\">Google\\Cloud\\Spanner\\Snapshot<\/a>"],"description":""}]},{"id":"transaction","type":"instance","name":"transaction","source":"src\/Spanner\/Database.php#L588","description":"<p>Create and return a new read\/write Transaction.<\/p>\n<p>When manually using a Transaction, it is advised that retry logic be\nimplemented to reapply all operations when an instance of\n<a data-custom-type=\"core\/exception\/abortedexception\">Google\\Cloud\\Core\\Exception\\AbortedException<\/a> is thrown.<\/p>\n<p>If you wish Google Cloud PHP to handle retry logic for you (recommended\nfor most cases), use <a data-custom-type=\"spanner\/database\" data-method=\"runTransaction\">Google\\Cloud\\Spanner\\Database::runTransaction()<\/a>.<\/p>\n<p>Please note that once a transaction reads data, it will lock the read\ndata, preventing other users from modifying that data. For this reason,\nit is important that every transaction commits or rolls back as early as\npossible. Do not hold transactions open longer than necessary.<\/p>","examples":[{"caption":"","code":"$transaction = $database->transaction();"}],"resources":[{"title":"BeginTransactionRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.BeginTransactionRequest"},{"title":"Transactions","link":"https:\/\/cloud.google.com\/spanner\/docs\/transactions"}],"params":[{"name":"options","description":"<p>Configuration Options.<\/p>","types":["array"],"optional":true,"nullable":null},{"name":"options.singleUse","description":"<p>If true, a Transaction ID will not be allocated up front. Instead, the transaction will be considered &quot;single-use&quot;, and may be used for only a single operation. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["bool"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\BadMethodCallException","description":"If attempting to call this method within\n        an existing transaction."}],"returns":[{"types":["<a data-custom-type=\"spanner\/transaction\">Google\\Cloud\\Spanner\\Transaction<\/a>"],"description":""}]},{"id":"runTransaction","type":"instance","name":"runTransaction","source":"src\/Spanner\/Database.php#L682","description":"<p>Execute Read\/Write operations inside a Transaction.<\/p>\n<p>Using this method and providing a callable operation provides certain\nbenefits including automatic retry when a transaction fails. In case of a\nfailure, all transaction operations, including reads, are re-applied in a\nnew transaction.<\/p>\n<p>If a transaction exceeds the maximum number of retries,\n<a data-custom-type=\"core\/exception\/abortedexception\">Google\\Cloud\\Core\\Exception\\AbortedException<\/a> will be thrown. Any other\nexception types will immediately bubble up and will interrupt the retry\noperation.<\/p>\n<p>Please note that once a transaction reads data, it will lock the read\ndata, preventing other users from modifying that data. For this reason,\nit is important that every transaction commits or rolls back as early as\npossible. Do not hold transactions open longer than necessary.<\/p>\n<p>Please also note that nested transactions are NOT supported by this client.\nAttempting to call <code>runTransaction<\/code> inside a transaction callable will\nraise a <code>BadMethodCallException<\/code>.<\/p>\n<p>If a callable finishes executing without invoking\n<a data-custom-type=\"spanner\/transaction\" data-method=\"commit\">Google\\Cloud\\Spanner\\Transaction::commit()<\/a> or\n<a data-custom-type=\"spanner\/transaction\" data-method=\"rollback\">Google\\Cloud\\Spanner\\Transaction::rollback()<\/a>, the transaction will\nautomatically be rolled back and <code>\\RuntimeException<\/code> thrown.<\/p>","examples":[{"caption":"","code":"$transaction = $database->runTransaction(function (Transaction $t) use ($username, $password) {\n    $rows = $t->execute('SELECT * FROM Users WHERE Name = @name and PasswordHash = @password', [\n        'parameters' => [\n            'name' => $username,\n            'password' => password_hash($password, PASSWORD_DEFAULT)\n        ]\n    ])->rows();\n    $user = $rows->current();\n\n    if ($user) {\n        \/\/ Do something here to grant the user access.\n        \/\/ Maybe set a cookie?\n\n        $user['loginCount'] = $user['loginCount'] + 1;\n        $t->update('Users', $user);\n\n        $t->commit();\n    } else {\n        $t->rollback();\n    }\n});"}],"resources":[{"title":"BeginTransactionRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.BeginTransactionRequest"},{"title":"Transactions","link":"https:\/\/cloud.google.com\/spanner\/docs\/transactions"}],"params":[{"name":"operation","description":"<p>The operations to run in the transaction.\n<strong>Signature:<\/strong> <code>function (Transaction $transaction)<\/code>.<\/p>","types":["callable"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options<\/p>","types":["array"],"optional":true,"nullable":null},{"name":"options.maxRetries","description":"<p>The number of times to attempt to apply the operation before failing. <strong>Defaults to <\/strong> <code>10<\/code>.<\/p>","types":["int"],"optional":null,"nullable":null},{"name":"options.singleUse","description":"<p>If true, a Transaction ID will not be allocated up front. Instead, the transaction will be considered &quot;single-use&quot;, and may be used for only a single operation. Note that in a single-use transaction, only a single operation may be executed, and rollback is not available. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["bool"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\RuntimeException","description":"If a transaction is not committed or rolled back."},{"type":"\\BadMethodCallException","description":"If attempting to call this method within\n        an existing transaction."}],"returns":[{"types":["mixed"],"description":"<p>The return value of <code>$operation<\/code>.<\/p>"}]},{"id":"insert","type":"instance","name":"insert","source":"src\/Spanner\/Database.php#L779","description":"<p>Insert a row.<\/p>\n<p>Mutations are committed in a single-use transaction.<\/p>\n<p>Since this method does not feature replay protection, it may attempt to\napply mutations more than once; if the mutations are not idempotent, this\nmay lead to a failure being reported when the mutation was previously\napplied.<\/p>","examples":[{"caption":"","code":"$database->insert('Posts', [\n    'ID' => 1337,\n    'postTitle' => 'Hello World!',\n    'postContent' => 'Welcome to our site.'\n]);"}],"resources":[{"title":"CommitRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.CommitRequest"}],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"data","description":"<p>The row data to insert.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit Timestamp.<\/p>"}]},{"id":"insertBatch","type":"instance","name":"insertBatch","source":"src\/Spanner\/Database.php#L818","description":"<p>Insert multiple rows.<\/p>\n<p>Mutations are committed in a single-use transaction.<\/p>\n<p>Since this method does not feature replay protection, it may attempt to\napply mutations more than once; if the mutations are not idempotent, this\nmay lead to a failure being reported when the mutation was previously\napplied.<\/p>","examples":[{"caption":"","code":"$database->insertBatch('Posts', [\n    [\n        'ID' => 1337,\n        'postTitle' => 'Hello World!',\n        'postContent' => 'Welcome to our site.'\n    ], [\n        'ID' => 1338,\n        'postTitle' => 'Our History',\n        'postContent' => 'Lots of people ask about where we got started.'\n    ]\n]);"}],"resources":[{"title":"CommitRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.CommitRequest"}],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The row data to insert.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit Timestamp.<\/p>"}]},{"id":"update","type":"instance","name":"update","source":"src\/Spanner\/Database.php#L854","description":"<p>Update a row.<\/p>\n<p>Only data which you wish to update need be included. The list of columns\nmust contain enough columns to allow Cloud Spanner to derive values for\nall primary key columns in the row to be modified.<\/p>\n<p>Mutations are committed in a single-use transaction.<\/p>","examples":[{"caption":"","code":"$database->update('Posts', [\n    'ID' => 1337,\n    'postContent' => 'Thanks for visiting our site!'\n]);"}],"resources":[{"title":"CommitRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.CommitRequest"}],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"data","description":"<p>The row data to update.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit Timestamp.<\/p>"}]},{"id":"updateBatch","type":"instance","name":"updateBatch","source":"src\/Spanner\/Database.php#L890","description":"<p>Update multiple rows.<\/p>\n<p>Only data which you wish to update need be included. The list of columns\nmust contain enough columns to allow Cloud Spanner to derive values for\nall primary key columns in the row(s) to be modified.<\/p>\n<p>Mutations are committed in a single-use transaction.<\/p>","examples":[{"caption":"","code":"$database->updateBatch('Posts', [\n    [\n        'ID' => 1337,\n        'postContent' => 'Thanks for visiting our site!'\n    ], [\n        'ID' => 1338,\n        'postContent' => 'A little bit about us!'\n    ]\n]);"}],"resources":[{"title":"CommitRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.CommitRequest"}],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The row data to update.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit Timestamp.<\/p>"}]},{"id":"insertOrUpdate","type":"instance","name":"insertOrUpdate","source":"src\/Spanner\/Database.php#L927","description":"<p>Insert or update a row.<\/p>\n<p>If a row already exists (determined by comparing the Primary Key to\nexisting table data), the row will be updated. If not, it will be\ncreated.<\/p>\n<p>Mutations are committed in a single-use transaction.<\/p>","examples":[{"caption":"","code":"$database->insertOrUpdate('Posts', [\n    'ID' => 1337,\n    'postTitle' => 'Hello World!',\n    'postContent' => 'Thanks for visiting our site!'\n]);"}],"resources":[{"title":"CommitRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.CommitRequest"}],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"data","description":"<p>The row data to insert or update.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit Timestamp.<\/p>"}]},{"id":"insertOrUpdateBatch","type":"instance","name":"insertOrUpdateBatch","source":"src\/Spanner\/Database.php#L965","description":"<p>Insert or update multiple rows.<\/p>\n<p>If a row already exists (determined by comparing the Primary Key to\nexisting table data), the row will be updated. If not, it will be\ncreated.<\/p>\n<p>Mutations are committed in a single-use transaction.<\/p>","examples":[{"caption":"","code":"$database->insertOrUpdateBatch('Posts', [\n    [\n        'ID' => 1337,\n        'postTitle' => 'Hello World!',\n        'postContent' => 'Thanks for visiting our site!'\n    ], [\n        'ID' => 1338,\n        'postTitle' => 'Our History',\n        'postContent' => 'A little bit about us!'\n    ]\n]);"}],"resources":[{"title":"CommitRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.CommitRequest"}],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The row data to insert or update.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit Timestamp.<\/p>"}]},{"id":"replace","type":"instance","name":"replace","source":"src\/Spanner\/Database.php#L1002","description":"<p>Replace a row.<\/p>\n<p>Provide data for the entire row. Cloud Spanner will attempt to find a\nrecord matching the Primary Key, and will replace the entire row. If a\nmatching row is not found, it will be inserted.<\/p>\n<p>Mutations are committed in a single-use transaction.<\/p>","examples":[{"caption":"","code":"$database->replace('Posts', [\n    'ID' => 1337,\n    'postTitle' => 'Hello World!',\n    'postContent' => 'Thanks for visiting our site!'\n]);"}],"resources":[{"title":"CommitRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.CommitRequest"}],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"data","description":"<p>The row data to replace.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit Timestamp.<\/p>"}]},{"id":"replaceBatch","type":"instance","name":"replaceBatch","source":"src\/Spanner\/Database.php#L1040","description":"<p>Replace multiple rows.<\/p>\n<p>Provide data for the entire row. Cloud Spanner will attempt to find a\nrecord matching the Primary Key, and will replace the entire row. If a\nmatching row is not found, it will be inserted.<\/p>\n<p>Mutations are committed in a single-use transaction.<\/p>","examples":[{"caption":"","code":"$database->replaceBatch('Posts', [\n    [\n        'ID' => 1337,\n        'postTitle' => 'Hello World!',\n        'postContent' => 'Thanks for visiting our site!'\n    ], [\n        'ID' => 1338,\n        'postTitle' => 'Our History',\n        'postContent' => 'A little bit about us!'\n    ]\n]);"}],"resources":[{"title":"CommitRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.CommitRequest"}],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"dataSet","description":"<p>The row data to replace.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit Timestamp.<\/p>"}]},{"id":"delete","type":"instance","name":"delete","source":"src\/Spanner\/Database.php#L1080","description":"<p>Delete one or more rows.<\/p>\n<p>Mutations are committed in a single-use transaction.<\/p>\n<p>Since this method does not feature replay protection, it may attempt to\napply mutations more than once; if the mutations are not idempotent, this\nmay lead to a failure being reported when the mutation was previously\napplied.<\/p>","examples":[{"caption":"","code":"$keySet = new KeySet([\n    'keys' => [\n        1337, 1338\n    ]\n]);\n\n$database->delete('Posts', $keySet);"}],"resources":[{"title":"CommitRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.CommitRequest"}],"params":[{"name":"table","description":"<p>The table to mutate.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"keySet","description":"<p>The KeySet to identify rows to delete.<\/p>","types":["<a data-custom-type=\"spanner\/keyset\">Google\\Cloud\\Spanner\\KeySet<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/timestamp\">Google\\Cloud\\Spanner\\Timestamp<\/a>"],"description":"<p>The commit Timestamp.<\/p>"}]},{"id":"execute","type":"instance","name":"execute","source":"src\/Spanner\/Database.php#L1219","description":"<p>Run a query.<\/p>","examples":[{"caption":"","code":"$result = $database->execute('SELECT * FROM Posts WHERE ID = @postId', [\n    'parameters' => [\n        'postId' => 1337\n    ]\n]);\n\n$firstRow = $result\n    ->rows()\n    ->current();"},{"caption":"<p>Execute a read and return a new Snapshot for further reads.<\/p>","code":"$result = $database->execute('SELECT * FROM Posts WHERE ID = @postId', [\n     'parameters' => [\n        'postId' => 1337\n    ],\n    'begin' => true,\n    'transactionType' => SessionPoolInterface::CONTEXT_READ\n]);\n\n$result->rows()->current();\n\n$snapshot = $result->snapshot();"},{"caption":"<p>Execute a read and return a new Transaction for further reads and writes.<\/p>","code":"$result = $database->execute('SELECT * FROM Posts WHERE ID = @postId', [\n     'parameters' => [\n        'postId' => 1337\n    ],\n    'begin' => true,\n    'transactionType' => SessionPoolInterface::CONTEXT_READWRITE\n]);\n\n$result->rows()->current();\n\n$transaction = $result->transaction();"},{"caption":"<p>Parameters which may be null must include an expected parameter type.<\/p>","code":"$result = $database->execute('SELECT * FROM Posts WHERE lastModifiedTime = @timestamp', [\n    'parameters' => [\n        'timestamp' => $timestamp\n    ],\n    'types' => [\n        'timestamp' => Database::TYPE_TIMESTAMP\n    ]\n]);\n\n$neverEditedPosts = $result->rows();"},{"caption":"<p>Array parameters which may be null or empty must include the array value type.<\/p>","code":"$result = $database->execute('SELECT @emptyArrayOfIntegers as numbers', [\n    'parameters' => [\n        'emptyArrayOfIntegers' => []\n    ],\n    'types' => [\n        'emptyArrayOfIntegers' => [Database::TYPE_ARRAY, Database::TYPE_INT64]\n    ]\n]);\n\n$row = $result->rows()->current();\n$emptyArray = $row['numbers'];"}],"resources":[{"title":"ExecuteSqlRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.ExecuteSqlRequest"}],"params":[{"name":"sql","description":"<p>The query string to execute.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.\nSee <a href=\"https:\/\/cloud.google.com\/spanner\/docs\/reference\/rpc\/google.spanner.v1#google.spanner.v1.TransactionOptions\">TransactionOptions<\/a>\nfor detailed description of available transaction options. Please\nnote that only one of <code>$strong<\/code>, <code>$minReadTimestamp<\/code>,\n<code>$maxStaleness<\/code>, <code>$readTimestamp<\/code> or <code>$exactStaleness<\/code> may be set in\na request.<\/p>","types":["array"],"optional":true,"nullable":null},{"name":"options.parameters","description":"<p>A key\/value array of Query Parameters, where the key is represented in the query string prefixed by a <code>@<\/code> symbol.<\/p>","types":["array"],"optional":null,"nullable":null},{"name":"options.types","description":"<p>A key\/value array of Query Parameter types. Generally, Google Cloud PHP can infer types. Explicit type definitions are only necessary for null parameter values. Accepted values are defined as constants on <a data-custom-type=\"spanner\/valuemapper\">Google\\Cloud\\Spanner\\ValueMapper<\/a>, and are as follows: <code>Database::TYPE_BOOL<\/code>, <code>Database::TYPE_INT64<\/code>, <code>Database::TYPE_FLOAT64<\/code>, <code>Database::TYPE_TIMESTAMP<\/code>, <code>Database::TYPE_DATE<\/code>, <code>Database::TYPE_STRING<\/code>, <code>Database::TYPE_BYTES<\/code>, <code>Database::TYPE_ARRAY<\/code> and <code>Database::TYPE_STRUCT<\/code>. If the parameter type is an array, the type should be given as an array, where the first element is <code>Database::TYPE_ARRAY<\/code> and the second element is the array type, for instance <code>[Database::TYPE_ARRAY, Database::TYPE_INT64]<\/code>.<\/p>","types":["array"],"optional":null,"nullable":null},{"name":"options.returnReadTimestamp","description":"<p>If true, the Cloud Spanner-selected read timestamp is included in the Transaction message that describes the transaction.<\/p>","types":["bool"],"optional":null,"nullable":null},{"name":"options.strong","description":"<p>Read at a timestamp where all previously committed transactions are visible.<\/p>","types":["bool"],"optional":null,"nullable":null},{"name":"options.minReadTimestamp","description":"<p>Execute reads at a timestamp &gt;= the given timestamp. Only available in single-use transactions.<\/p>","types":["Timestamp"],"optional":null,"nullable":null},{"name":"options.maxStaleness","description":"<p>Read data at a timestamp &gt;= NOW - the given timestamp. Only available in single-use transactions.<\/p>","types":["Duration"],"optional":null,"nullable":null},{"name":"options.readTimestamp","description":"<p>Executes all reads at the given timestamp.<\/p>","types":["Timestamp"],"optional":null,"nullable":null},{"name":"options.exactStaleness","description":"<p>Represents a number of seconds. Executes all reads at a timestamp that is $exactStaleness old.<\/p>","types":["Duration"],"optional":null,"nullable":null},{"name":"options.begin","description":"<p>If true, will begin a new transaction. If a read\/write transaction is desired, set the value of $transactionType. If a transaction or snapshot is created, it will be returned as <code>$result-&gt;transaction()<\/code> or <code>$result-&gt;snapshot()<\/code>. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["bool"],"optional":null,"nullable":null},{"name":"options.transactionType","description":"<p>One of <code>SessionPoolInterface::CONTEXT_READ<\/code> or <code>SessionPoolInterface::CONTEXT_READWRITE<\/code>. If read\/write is chosen, any snapshot options will be disregarded. If <code>$begin<\/code> is false, transaction type MUST be <code>SessionPoolInterface::CONTEXT_READ<\/code>. <strong>Defaults to<\/strong> <code>SessionPoolInterface::CONTEXT_READ<\/code>.<\/p>","types":["string"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/result\">Google\\Cloud\\Spanner\\Result<\/a>"],"description":""}]},{"id":"read","type":"instance","name":"read","source":"src\/Spanner\/Database.php#L1333","description":"<p>Lookup rows in a table.<\/p>","examples":[{"caption":"","code":"$keySet = new KeySet([\n    'keys' => [1337]\n]);\n\n$columns = ['ID', 'title', 'content'];\n\n$result = $database->read('Posts', $keySet, $columns);\n\n$firstRow = $result\n    ->rows()\n    ->current();"},{"caption":"<p>Execute a read and return a new Snapshot for further reads.<\/p>","code":"$keySet = new KeySet([\n    'keys' => [1337]\n]);\n\n$columns = ['ID', 'title', 'content'];\n\n$result = $database->read('Posts', $keySet, $columns, [\n    'begin' => true,\n    'transactionType' => SessionPoolInterface::CONTEXT_READ\n]);\n\n$result->rows()->current();\n\n$snapshot = $result->snapshot();"},{"caption":"<p>Execute a read and return a new Transaction for further reads and writes.<\/p>","code":"$keySet = new KeySet([\n    'keys' => [1337]\n]);\n\n$columns = ['ID', 'title', 'content'];\n\n$result = $database->read('Posts', $keySet, $columns, [\n    'begin' => true,\n    'transactionType' => SessionPoolInterface::CONTEXT_READWRITE\n]);\n\n$result->rows()->current();\n\n$transaction = $result->transaction();"}],"resources":[{"title":"ReadRequest","link":"https:\/\/cloud.google.com\/spanner\/reference\/rpc\/google.spanner.v1#google.spanner.v1.ReadRequest"}],"params":[{"name":"table","description":"<p>The table name.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"keySet","description":"<p>The KeySet to select rows.<\/p>","types":["<a data-custom-type=\"spanner\/keyset\">Google\\Cloud\\Spanner\\KeySet<\/a>"],"optional":false,"nullable":null},{"name":"columns","description":"<p>A list of column names to return.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>\n<pre><code>See [TransactionOptions](https:\/\/cloud.google.com\/spanner\/docs\/reference\/rpc\/google.spanner.v1#google.spanner.v1.TransactionOptions)\nfor detailed description of available transaction options.\n\nPlease note that only one of `$strong`, `$minReadTimestamp`,\n`$maxStaleness`, `$readTimestamp` or `$exactStaleness` may be set in\na request.<\/code><\/pre>","types":["array"],"optional":true,"nullable":null},{"name":"options.index","description":"<p>The name of an index on the table.<\/p>","types":["string"],"optional":null,"nullable":null},{"name":"options.limit","description":"<p>The number of results to return.<\/p>","types":["int"],"optional":null,"nullable":null},{"name":"options.returnReadTimestamp","description":"<p>If true, the Cloud Spanner-selected read timestamp is included in the Transaction message that describes the transaction.<\/p>","types":["bool"],"optional":null,"nullable":null},{"name":"options.strong","description":"<p>Read at a timestamp where all previously committed transactions are visible.<\/p>","types":["bool"],"optional":null,"nullable":null},{"name":"options.minReadTimestamp","description":"<p>Execute reads at a timestamp &gt;= the given timestamp. Only available in single-use transactions.<\/p>","types":["Timestamp"],"optional":null,"nullable":null},{"name":"options.maxStaleness","description":"<p>Read data at a timestamp &gt;= NOW - the given timestamp. Only available in single-use transactions.<\/p>","types":["Duration"],"optional":null,"nullable":null},{"name":"options.readTimestamp","description":"<p>Executes all reads at the given timestamp.<\/p>","types":["Timestamp"],"optional":null,"nullable":null},{"name":"options.exactStaleness","description":"<p>Represents a number of seconds. Executes all reads at a timestamp that is $exactStaleness old.<\/p>","types":["Duration"],"optional":null,"nullable":null},{"name":"options.begin","description":"<p>If true, will begin a new transaction. If a read\/write transaction is desired, set the value of $transactionType. If a transaction or snapshot is created, it will be returned as <code>$result-&gt;transaction()<\/code> or <code>$result-&gt;snapshot()<\/code>. <strong>Defaults to<\/strong> <code>false<\/code>.<\/p>","types":["bool"],"optional":null,"nullable":null},{"name":"options.transactionType","description":"<p>One of <code>SessionPoolInterface::CONTEXT_READ<\/code> or <code>SessionPoolInterface::CONTEXT_READWRITE<\/code>. If read\/write is chosen, any snapshot options will be disregarded. If <code>$begin<\/code> is false, transaction type MUST be <code>SessionPoolInterface::CONTEXT_READ<\/code>. <strong>Defaults to<\/strong> <code>SessionPoolInterface::CONTEXT_READ<\/code>.<\/p>","types":["string"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/result\">Google\\Cloud\\Spanner\\Result<\/a>"],"description":""}]},{"id":"sessionPool","type":"instance","name":"sessionPool","source":"src\/Spanner\/Database.php#L1358","description":"<p>Get the underlying session pool implementation.<\/p>","examples":[{"caption":"","code":"$pool = $database->sessionPool();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"spanner\/session\/sessionpoolinterface\">Google\\Cloud\\Spanner\\Session\\SessionPoolInterface<\/a>","null"],"description":""}]},{"id":"close","type":"instance","name":"close","source":"src\/Spanner\/Database.php#L1376","description":"<p>Closes the database connection by returning the active session back to\nthe session pool queue or by deleting the session if there is no pool\nassociated.<\/p>\n<p>It is highly important to ensure this is called as it is not always safe\nto rely soley on <a data-custom-type=\"spanner\/database\" data-method=\"__destruct\">Google\\Cloud\\Spanner\\Database::__destruct()<\/a>.<\/p>","examples":[{"caption":"","code":"$database->close();"}],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"__destruct","type":"instance","name":"__destruct","source":"src\/Spanner\/Database.php#L1392","description":"<p>Closes the database connection.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"resumeOperation","type":"instance","name":"resumeOperation","source":"src\/Spanner\/Database.php","description":"<p>Resume a Long Running Operation<\/p>","examples":[{"caption":"","code":"$operation = $database->resumeOperation($operationName);"}],"resources":[],"params":[{"name":"operationName","description":"<p>The Long Running Operation name.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"info","description":"<p>The operation data.<\/p>","types":["array"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["\\LongRunningOperation"],"description":""}]},{"id":"longRunningOperations","type":"instance","name":"longRunningOperations","source":"src\/Spanner\/Database.php","description":"<p>List long running operations.<\/p>","examples":[{"caption":"","code":"$operations = $database->longRunningOperations();"}],"resources":[],"params":[{"name":"options","description":"<p>Configuration Options.<\/p>","types":["array"],"optional":true,"nullable":null},{"name":"options.name","description":"<p>The name of the operation collection.<\/p>","types":["string"],"optional":null,"nullable":null},{"name":"options.filter","description":"<p>The standard list filter.<\/p>","types":["string"],"optional":null,"nullable":null},{"name":"options.pageSize","description":"<p>Maximum number of results to return per request.<\/p>","types":["int"],"optional":null,"nullable":null},{"name":"options.resultLimit","description":"<p>Limit the number of results returned in total. <strong>Defaults to<\/strong> <code>0<\/code> (return all results).<\/p>","types":["int"],"optional":null,"nullable":null},{"name":"options.pageToken","description":"<p>A previously-returned page token used to resume the loading of results from a specific point.<\/p>","types":["string"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["ItemIterator&lt;InstanceConfiguration&gt;"],"description":""}]}]}