{"id":"debugger\/v2\/gapic\/controller2gapicclient","type":"","title":"Google\\Cloud\\Debugger\\V2\\Gapic\\Controller2GapicClient","name":"Controller2GapicClient","description":"<p>Service Description: The Controller service provides the API for orchestrating a collection of\ndebugger agents to perform debugging tasks. These agents are each attached\nto a process of an application which may include one or more replicas.<\/p>\n<p>The debugger agents register with the Controller to identify the application\nbeing debugged, the Debuggee. All agents that register with the same data,\nrepresent the same Debuggee, and are assigned the same <code>debuggee_id<\/code>.<\/p>\n<p>The debugger agents call the Controller to retrieve  the list of active\nBreakpoints. Agents with the same <code>debuggee_id<\/code> get the same breakpoints\nlist. An agent that can fulfill the breakpoint request updates the\nController with the breakpoint result. The controller selects the first\nresult received and discards the rest of the results.\nAgents that poll again for active breakpoints will no longer have\nthe completed breakpoint in the list and should remove that breakpoint from\ntheir attached process.<\/p>\n<p>The Controller service does not provide a way to retrieve the results of\na completed breakpoint. This functionality is available using the Debugger\nservice.<\/p>\n<p>EXPERIMENTAL: This client library class has not yet been declared GA (1.0). This means that\neven though we intend the surface to be stable, we may make backwards incompatible changes\nif necessary.<\/p>\n<p>This class provides the ability to make remote calls to the backing service through method\ncalls that map to API methods. Sample code to get started:<\/p>\n<pre><code>$controller2Client = new Controller2Client();\ntry {\n    $debuggee = new Debuggee();\n    $response = $controller2Client-&gt;registerDebuggee($debuggee);\n} finally {\n    $controller2Client-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"src\/Debugger\/V2\/Gapic\/Controller2GapicClient.php#L191","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"options","description":"<p>Optional. Options for configuring the service API wrapper.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.serviceAddress","description":"<p>The domain name of the API remote host. Default 'clouddebugger.googleapis.com'.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.port","description":"<p>The port on which to connect to the remote host. Default 443.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.mixed\" target=\"_blank\">mixed<\/a>"],"optional":null,"nullable":null},{"name":"options.channel\n","description":"<p>A <code>Channel<\/code> object. If not specified, a channel will be constructed. NOTE: This option is only valid when utilizing the gRPC transport.<\/p>","types":["\\Grpc\\Channel"],"optional":null,"nullable":null},{"name":"options.sslCreds\n","description":"<p>A <code>ChannelCredentials<\/code> object for use with an SSL-enabled channel. Default: a credentials object returned from \\Grpc\\ChannelCredentials::createSsl(). NOTE: This option is only valid when utilizing the gRPC transport. Also, if the $channel optional argument is specified, then this argument is unused.<\/p>","types":["\\Grpc\\ChannelCredentials"],"optional":null,"nullable":null},{"name":"options.forceNewChannel\n","description":"<p>If true, this forces gRPC to create a new channel instead of using a persistent channel. Defaults to false. NOTE: This option is only valid when utilizing the gRPC transport. Also, if the $channel optional argument is specified, then this option is unused.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"options.credentialsLoader\n","description":"<p>A CredentialsLoader object created using the Google\\Auth library.<\/p>","types":["<a href=\"https:\/\/github.com\/google\/google-auth-library-php\/blob\/master\/src\/CredentialsLoader.php\" target=\"_blank\">Google\\Auth\\CredentialsLoader<\/a>"],"optional":null,"nullable":null},{"name":"options.scopes","description":"<p>A string array of scopes to use when acquiring credentials. Defaults to the scopes for the Stackdriver Debugger API.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>"],"optional":null,"nullable":null},{"name":"options.clientConfigPath\n","description":"<p>Path to a JSON file containing client method configuration, including retry settings. Specify this setting to specify the retry behavior of all methods on the client. By default this settings points to the default client config file, which is provided in the resources folder. The retry settings provided in this option can be overridden by settings in $retryingOverride<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.retryingOverride\n","description":"<p>An associative array in which the keys are method names (e.g. 'createFoo'), and the values are retry settings to use for that method. The retry settings for each method can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage. Passing a value of null is equivalent to a value of ['retriesEnabled' =&gt; false]. Retry settings provided in this setting override the settings in $clientConfigPath.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.authHttpHandler","description":"<p>A handler used to deliver PSR-7 requests specifically for authentication. Should match a signature of <code>function (RequestInterface $request, array $options) : ResponseInterface<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":null,"nullable":null},{"name":"options.httpHandler","description":"<p>A handler used to deliver PSR-7 requests. Should match a signature of <code>function (RequestInterface $request, array $options) : PromiseInterface<\/code>. NOTE: This option is only valid when utilizing the REST transport.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":null,"nullable":null},{"name":"options.transport","description":"<p>The transport used for executing network requests. May be either the string <code>rest<\/code> or <code>grpc<\/code>. Additionally, it is possible to pass in an already instantiated transport. Defaults to <code>grpc<\/code> if gRPC support is detected on the system.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/Transport\\TransportInterface.html\" target=\"_blank\">Google\\ApiCore\\Transport\\TransportInterface<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"registerDebuggee","type":"instance","name":"registerDebuggee","source":"src\/Debugger\/V2\/Gapic\/Controller2GapicClient.php#L237","description":"<p>Registers the debuggee with the controller service.<\/p>\n<p>All agents attached to the same application must call this method with\nexactly the same request content to get back the same stable <code>debuggee_id<\/code>.\nAgents should call this method again whenever <code>google.rpc.Code.NOT_FOUND<\/code>\nis returned from any controller method.<\/p>\n<p>This protocol allows the controller service to disable debuggees, recover\nfrom data loss, or change the <code>debuggee_id<\/code> format. Agents must handle\n<code>debuggee_id<\/code> value changing upon re-registration.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$controller2Client = new Controller2Client();\ntry {\n    $debuggee = new Debuggee();\n    $response = $controller2Client-&gt;registerDebuggee($debuggee);\n} finally {\n    $controller2Client-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"debuggee","description":"<p>Debuggee information to register.\nThe fields <code>project<\/code>, <code>uniquifier<\/code>, <code>description<\/code> and <code>agent_version<\/code>\nof the debuggee must be set.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Debugger\\V2\\Debuggee.html\" target=\"_blank\">Google\\Cloud\\Debugger\\V2\\Debuggee<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Debugger\\V2\\RegisterDebuggeeResponse.html\" target=\"_blank\">Google\\Cloud\\Debugger\\V2\\RegisterDebuggeeResponse<\/a>"],"description":""}]},{"id":"listActiveBreakpoints","type":"instance","name":"listActiveBreakpoints","source":"src\/Debugger\/V2\/Gapic\/Controller2GapicClient.php#L304","description":"<p>Returns the list of all active breakpoints for the debuggee.<\/p>\n<p>The breakpoint specification (<code>location<\/code>, <code>condition<\/code>, and <code>expressions<\/code>\nfields) is semantically immutable, although the field values may\nchange. For example, an agent may update the location line number\nto reflect the actual line where the breakpoint was set, but this\ndoesn't change the breakpoint semantics.<\/p>\n<p>This means that an agent does not need to check if a breakpoint has changed\nwhen it encounters the same breakpoint on a successive call.\nMoreover, an agent should remember the breakpoints that are completed\nuntil the controller removes them from the active list to avoid\nsetting those breakpoints again.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$controller2Client = new Controller2Client();\ntry {\n    $debuggeeId = '';\n    $response = $controller2Client-&gt;listActiveBreakpoints($debuggeeId);\n} finally {\n    $controller2Client-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"debuggeeId","description":"<p>Identifies the debuggee.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.waitToken\n","description":"<p>A token that, if specified, blocks the method call until the list of active breakpoints has changed, or a server-selected timeout has expired. The value should be set from the <code>next_wait_token<\/code> field in the last response. The initial value should be set to <code>\"init\"<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.successOnTimeout\n","description":"<p>If set to <code>true<\/code> (recommended), returns <code>google.rpc.Code.OK<\/code> status and sets the <code>wait_expired<\/code> response field to <code>true<\/code> when the server-selected timeout has expired. If set to <code>false<\/code> (deprecated), returns <code>google.rpc.Code.ABORTED<\/code> status when the server-selected timeout has expired.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">Google\\Cloud\\Debugger\\V2\\ListActiveBreakpointsResponse<\/a>"],"description":""}]},{"id":"updateActiveBreakpoint","type":"instance","name":"updateActiveBreakpoint","source":"src\/Debugger\/V2\/Gapic\/Controller2GapicClient.php#L364","description":"<p>Updates the breakpoint state or mutable fields.<\/p>\n<p>The entire Breakpoint message must be sent back to the controller service.<\/p>\n<p>Updates to active breakpoint fields are only allowed if the new value\ndoes not change the breakpoint specification. Updates to the <code>location<\/code>,\n<code>condition<\/code> and <code>expressions<\/code> fields should not alter the breakpoint\nsemantics. These may only make changes such as canonicalizing a value\nor snapping the location to the correct line of code.<\/p>\n<p>Sample code:<\/p>\n<pre><code>$controller2Client = new Controller2Client();\ntry {\n    $debuggeeId = '';\n    $breakpoint = new Breakpoint();\n    $response = $controller2Client-&gt;updateActiveBreakpoint($debuggeeId, $breakpoint);\n} finally {\n    $controller2Client-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"debuggeeId","description":"<p>Identifies the debuggee being debugged.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"breakpoint","description":"<p>Updated breakpoint information.\nThe field <code>id<\/code> must be set.\nThe agent must echo all Breakpoint specification fields in the update.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">Google\\Cloud\\Debugger\\V2\\Breakpoint<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">Google\\Cloud\\Debugger\\V2\\UpdateActiveBreakpointResponse<\/a>"],"description":""}]}]}