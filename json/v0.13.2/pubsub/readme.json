{"id":"pubsub\/readme","type":"guide","title":"Google Cloud Pub\/Sub","name":"Google Cloud Pub\/Sub","description":"<body>\n<p>Google Cloud Pub\/Sub allows you to send and receive messages between independent\napplications.<\/p>\n<h2>More Information<\/h2>\n<ul>\n<li>\n<a href=\"https:\/\/cloud.google.com\/pubsub\/docs\/\">Google Cloud Pub\/Sub docs<\/a>.<\/li>\n<\/ul>\n<h2>Client Libraries<\/h2>\n<ul>\n<li><a href=\"https:\/\/googlecloudplatform.github.io\/google-cloud-php\/#\/docs\/latest\/pubsub\/pubsubclient\"><strong>PubSubClient<\/strong><\/a><\/li>\n<li><a href=\"https:\/\/googlecloudplatform.github.io\/google-cloud-php\/#\/docs\/latest\/pubsub\/subscription\">Subscription<\/a><\/li>\n<li><a href=\"https:\/\/googlecloudplatform.github.io\/google-cloud-php\/#\/docs\/latest\/pubsub\/topic\">Topic<\/a><\/li>\n<\/ul>\n<h2>Generated Client<\/h2>\n<p><a href=\"https:\/\/googlecloudplatform.github.io\/google-cloud-php\/#\/docs\/latest\/guides\/generated-client\">What are Generated Clients?<\/a><\/p>\n<h3>V1<\/h3>\n<ul>\n<li><a href=\"https:\/\/googlecloudplatform.github.io\/google-cloud-php\/#\/docs\/latest\/pubsub\/v1\/publisherapi\">PublisherApi<\/a><\/li>\n<li><a href=\"https:\/\/googlecloudplatform.github.io\/google-cloud-php\/#\/docs\/latest\/pubsub\/v1\/subscriberapi\">SubscriberApi<\/a><\/li>\n<\/ul>\n<h2>Using Pub\/Sub<\/h2>\n<h3>Concepts<\/h3>\n<p>Pub\/Sub is a way of sharing messages between independent applications. A\n\"Publisher\" will push messages into a topic, while a \"Subscriber\" will retrieve\nmessages from a subscription.<\/p>\n<p>Subscriptions are a named resource representing the stream of messages from a\nsingle topic. Generally, each subscribing application would create a single\nsubscription to each topic which is applicable to that application.<\/p>\n<p>Messages are a combination of data and optional attributes which a publisher\nsends to a topic to be delivered to each subscriber.<\/p>\n<p>Subscribers may elect to receive messages by pulling (i.e. sending a request,\nto which the response contains all new messages), or by push (by supplying an\napplication endpoint which can consume incoming messages on demand).<\/p>\n<h3>Examples<\/h3>\n<h4>Obtaining an instance of <code>PubSubClient<\/code>\n<\/h4>\n<pre><code class=\"language-php\">&lt;?php\n\nuse Google\\Cloud\\ServiceBuilder;\n\n$cloud = new ServiceBuilder();\n\n$pubsub = $cloud-&gt;pubsub();<\/code><\/pre>\n<h4>Creating a new Topic<\/h4>\n<pre><code class=\"language-php\">$pubsub-&gt;createTopic('my-new-topic');<\/code><\/pre>\n<h4>Publish a message<\/h4>\n<p><code>PubSubClient::createTopic()<\/code> should be called <em>once<\/em> to create the named topic\nin the service. To obtain a reference to an <em>existing<\/em> topic, use\n<code>PubSubClient::topic()<\/code>.<\/p>\n<pre><code class=\"language-php\">$topic = $pubsub-&gt;topic('my-new-topic');\n$topic-&gt;publish([\n    'data' =&gt; 'Hello world!',\n    'attributes' =&gt; [\n        'key' =&gt; 'val'\n    ]\n);<\/code><\/pre>\n<h4>Subscribe to a topic<\/h4>\n<pre><code class=\"language-php\">$subscription = $pubsub-&gt;subscribe('my-new-subscription');<\/code><\/pre>\n<h4>Retrieve messages<\/h4>\n<p><code>PubSubClient::subscribe()<\/code> should be called <em>once<\/em> to create the named\nsubscription in the service. To obtain a reference to an <em>existing<\/em>\nsubscription, use <code>PubSubClient::subscription()<\/code>.<\/p>\n<pre><code class=\"language-php\">$subscription = $pubsub-&gt;subscription('my-new-subscription');\n$messages = $subscription-&gt;pull();\n\nforeach ($messages as $message) {\n    echo $message['message']['data'];\n}<\/code><\/pre>\n<h4>Acknowledge received message<\/h4>\n<p>Received messages should be <em>acknowledged<\/em> upon receipt, to prevent them from\nbeing delivered multiple times.<\/p>\n<pre><code class=\"language-php\">$subscription = $pubsub-&gt;subscription('my-new-subscription');\n$messages = $subscription-&gt;pull();\n\n$ackIds = [];\nforeach ($messages as $message) {\n    $ackIds[] = $message['ackId'];\n}\n\n$subscription-&gt;acknowledgeBatch($ackIds);<\/code><\/pre>\n<h4>Configure Push Delivery<\/h4>\n<p>When Push Delivery is enabled, new messages will be delivered via HTTP to the\ngiven endpoint.<\/p>\n<p>For more information, refer to the <a href=\"https:\/\/cloud.google.com\/pubsub\/docs\/subscriber#receive_push\">receive push<\/a>\nguide.<\/p>\n<p>To pause push delivery for a subscription, call\n<code>Subscription::modifyPushConfig()<\/code>, supplying an empty string (<code>''<\/code>) as the\n<code>pushEndpoint<\/code>.<\/p>\n<pre><code class=\"language-php\">$subscription = $pubsub-&gt;subscription('my-new-subscription');\n$subscription-&gt;modifyPushConfig([\n    'pushEndpoint' =&gt; 'https:\/\/mysite.com\/application\/pubsub\/push'\n]);<\/code><\/pre>\n<\/body>","methods":[]}