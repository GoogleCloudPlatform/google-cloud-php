{"id":"vision\/annotation\/face","type":"","title":"Google\\Cloud\\Vision\\Annotation\\Face","name":"Face","description":"<p>Represents a face annotation result<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\ServiceBuilder;\n\n$cloud = new ServiceBuilder();\n$vision = $cloud->vision();\n\n$image = $vision->image(fopen(__DIR__ .'\/assets\/family-photo.jpg', 'r'), [ 'FACE_DETECTION' ]);\n$annotation = $vision->annotate($image);\n\n$faces = $annotation->faces();\n$face = $faces[0];"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"\/src\/Vision\/Annotation\/Face.php#L225","description":"<p>Create an Face result.<\/p>\n<p>This class is created internally by <a data-custom-type=\"vision\/annotation\">Google\\Cloud\\Vision\\Annotation<\/a>.\nSee <a data-custom-type=\"vision\/annotation\" data-method=\"faces\">Google\\Cloud\\Vision\\Annotation::faces()<\/a> for full usage details.\nThis class should not be instantiated outside the externally.<\/p>","examples":[],"resources":[],"params":[{"name":"info","description":"<p>The face annotation result<\/p>","types":["array"],"optional":false,"nullable":null}],"exceptions":[],"returns":[]},{"id":"landmarks","type":"instance","name":"landmarks","source":"\/src\/Vision\/Annotation\/Face.php#L240","description":"<p>Returns an object detailing facial landmarks and their location.<\/p>","examples":[{"caption":"","code":"$leftEye = $face->landmarks()->leftEye();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"vision\/annotation\/face\/landmarks\">Google\\Cloud\\Vision\\Annotation\\Face\\Landmarks<\/a>"],"description":""}]},{"id":"isJoyful","type":"instance","name":"isJoyful","source":"\/src\/Vision\/Annotation\/Face.php#L261","description":"<p>Check whether the face is joyful.<\/p>","examples":[{"caption":"","code":"if ($face->isJoyful()) {\n    echo \"Face is Joyful\";\n}"}],"resources":[],"params":[{"name":"strength","description":"<p>Value should be one of &quot;low&quot;,\n&quot;medium&quot; or &quot;high&quot;. Recommended usage is via <code>Face::STRENGTH_*<\/code>\nconstants. Higher strength will result in fewer <code>true<\/code> results,\nbut fewer false positives. <strong>Defaults to<\/strong> <code>\"low\"<\/code>.<\/p>","types":["string"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["bool"],"description":""}]},{"id":"isSorrowful","type":"instance","name":"isSorrowful","source":"\/src\/Vision\/Annotation\/Face.php#L282","description":"<p>Check whether the face is sorrowful.<\/p>","examples":[{"caption":"","code":"if ($face->isSorrowful()) {\n    echo \"Face is Sorrowful\";\n}"}],"resources":[],"params":[{"name":"strength","description":"<p>Value should be one of &quot;low&quot;,\n&quot;medium&quot; or &quot;high&quot;. Recommended usage is via <code>Face::STRENGTH_*<\/code>\nconstants. Higher strength will result in fewer <code>true<\/code> results,\nbut fewer false positives. <strong>Defaults to<\/strong> <code>\"low\"<\/code>.<\/p>","types":["string"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["bool"],"description":""}]},{"id":"isAngry","type":"instance","name":"isAngry","source":"\/src\/Vision\/Annotation\/Face.php#L303","description":"<p>Check whether the face is angry.<\/p>","examples":[{"caption":"","code":"if ($face->isAngry()) {\n    echo \"Face is Angry\";\n}"}],"resources":[],"params":[{"name":"strength","description":"<p>Value should be one of &quot;low&quot;,\n&quot;medium&quot; or &quot;high&quot;. Recommended usage is via <code>Face::STRENGTH_*<\/code>\nconstants. Higher strength will result in fewer <code>true<\/code> results,\nbut fewer false positives. <strong>Defaults to<\/strong> <code>\"low\"<\/code>.<\/p>","types":["string"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["bool"],"description":""}]},{"id":"isSurprised","type":"instance","name":"isSurprised","source":"\/src\/Vision\/Annotation\/Face.php#L324","description":"<p>Check whether the face is surprised.<\/p>","examples":[{"caption":"","code":"if ($face->isSurprised()) {\n    echo \"Face is Surprised\";\n}"}],"resources":[],"params":[{"name":"strength","description":"<p>Value should be one of &quot;low&quot;,\n&quot;medium&quot; or &quot;high&quot;. Recommended usage is via <code>Face::STRENGTH_*<\/code>\nconstants. Higher strength will result in fewer <code>true<\/code> results,\nbut fewer false positives. <strong>Defaults to<\/strong> <code>\"low\"<\/code>.<\/p>","types":["string"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["bool"],"description":""}]},{"id":"isUnderExposed","type":"instance","name":"isUnderExposed","source":"\/src\/Vision\/Annotation\/Face.php#L345","description":"<p>Check whether the face is under exposed.<\/p>","examples":[{"caption":"","code":"if ($face->isUnderExposed()) {\n    echo \"Face is Under Exposed\";\n}"}],"resources":[],"params":[{"name":"strength","description":"<p>Value should be one of &quot;low&quot;,\n&quot;medium&quot; or &quot;high&quot;. Recommended usage is via <code>Face::STRENGTH_*<\/code>\nconstants. Higher strength will result in fewer <code>true<\/code> results,\nbut fewer false positives. <strong>Defaults to<\/strong> <code>\"low\"<\/code>.<\/p>","types":["string"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["bool"],"description":""}]},{"id":"isBlurred","type":"instance","name":"isBlurred","source":"\/src\/Vision\/Annotation\/Face.php#L366","description":"<p>Check whether the face is blurred.<\/p>","examples":[{"caption":"","code":"if ($face->isBlurred()) {\n    echo \"Face is Blurred\";\n}"}],"resources":[],"params":[{"name":"strength","description":"<p>Value should be one of &quot;low&quot;,\n&quot;medium&quot; or &quot;high&quot;. Recommended usage is via <code>Face::STRENGTH_*<\/code>\nconstants. Higher strength will result in fewer <code>true<\/code> results,\nbut fewer false positives. <strong>Defaults to<\/strong> <code>\"low\"<\/code>.<\/p>","types":["string"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["bool"],"description":""}]},{"id":"hasHeadwear","type":"instance","name":"hasHeadwear","source":"\/src\/Vision\/Annotation\/Face.php#L387","description":"<p>Check whether the person is wearing headwear.<\/p>","examples":[{"caption":"","code":"if ($face->hasHeadwear()) {\n    echo \"Face has Headwear\";\n}"}],"resources":[],"params":[{"name":"strength","description":"<p>Value should be one of &quot;low&quot;,\n&quot;medium&quot; or &quot;high&quot;. Recommended usage is via <code>Face::STRENGTH_*<\/code>\nconstants. Higher strength will result in fewer <code>true<\/code> results,\nbut fewer false positives. <strong>Defaults to<\/strong> <code>\"low\"<\/code>.<\/p>","types":["string"],"optional":true,"nullable":null}],"exceptions":[],"returns":[{"types":["bool"],"description":""}]},{"id":"boundingPoly","type":"instance","name":"boundingPoly","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>The bounding polygon around the face.<\/p>","examples":[{"caption":"","code":"print_R($face->boundingPoly());"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["array"],"description":""}]},{"id":"fdBoundingPoly","type":"instance","name":"fdBoundingPoly","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Bounding polygon around the face.<\/p>\n<p>Tighter than <code>boundingPoly<\/code> and encloses only the skin part of the face.<\/p>","examples":[{"caption":"","code":"print_R($face->fdBoundingPoly());"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["array"],"description":""}]},{"id":"rollAngle","type":"instance","name":"rollAngle","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Roll angle.<\/p>\n<p>Indicates the amount of clockwise\/anti-clockwise rotation of the face.\nRange [-180,180]<\/p>","examples":[{"caption":"","code":"print_R($face->rollAngle());"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["float"],"description":""}]},{"id":"panAngle","type":"instance","name":"panAngle","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Yaw angle.<\/p>\n<p>Indicates the leftward\/rightward angle that the face is pointing. Range\n[-180,180]<\/p>","examples":[{"caption":"","code":"print_R($face->panAngle());"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["float"],"description":""}]},{"id":"tiltAngle","type":"instance","name":"tiltAngle","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Pitch angle.<\/p>\n<p>Indicates the upwards\/downwards angle that the face is pointing. Range\n[-180,180]<\/p>","examples":[{"caption":"","code":"print_R($face->tiltAngle());"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["float"],"description":""}]},{"id":"detectionConfidence","type":"instance","name":"detectionConfidence","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>The detection confidence.<\/p>\n<p>Range [0,1]<\/p>","examples":[{"caption":"","code":"print_R($face->detectionConfidence());"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["float"],"description":""}]},{"id":"landmarkingConfidence","type":"instance","name":"landmarkingConfidence","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Face landmarking confidence.<\/p>\n<p>Range [0,1]<\/p>","examples":[{"caption":"","code":"print_R($face->landmarkingConfidence());"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["float"],"description":""}]},{"id":"joyLikelihood","type":"instance","name":"joyLikelihood","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Joy likelihood.<\/p>","examples":[{"caption":"","code":"echo $face->joyLikelihood();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["string"],"description":""}]},{"id":"sorrowLikelihood","type":"instance","name":"sorrowLikelihood","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Sorrow likelihood.<\/p>","examples":[{"caption":"","code":"echo $face->sorrowLikelihood();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["string"],"description":""}]},{"id":"angerLikelihood","type":"instance","name":"angerLikelihood","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Anger likelihood.<\/p>","examples":[{"caption":"","code":"echo $face->angerLikelihood();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["string"],"description":""}]},{"id":"surpriseLikelihood","type":"instance","name":"surpriseLikelihood","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Surprise likelihood.<\/p>","examples":[{"caption":"","code":"echo $face->surpriseLikelihood();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["string"],"description":""}]},{"id":"underExposedLikelihood","type":"instance","name":"underExposedLikelihood","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Under exposure likelihood.<\/p>","examples":[{"caption":"","code":"echo $face->underExposedLikelihood();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["string"],"description":""}]},{"id":"blurredLikelihood","type":"instance","name":"blurredLikelihood","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Blurred likelihood.<\/p>","examples":[{"caption":"","code":"echo $face->blurredLikelihood();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["string"],"description":""}]},{"id":"headwearLikelihood","type":"instance","name":"headwearLikelihood","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Headwear likelihood.<\/p>","examples":[{"caption":"","code":"echo $face->headwearLikelihood();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["string"],"description":""}]},{"id":"info","type":"instance","name":"info","source":"\/src\/Vision\/Annotation\/Face.php","description":"<p>Get the raw annotation result<\/p>","examples":[{"caption":"","code":"$info = $face->info();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["array"],"description":""}]}]}