{"id":"logging\/v2\/configservicev2client","type":"","title":"Google\\Cloud\\Logging\\V2\\ConfigServiceV2Client","name":"ConfigServiceV2Client","description":"<p>Service Description: Service for configuring sinks used to export log entries outside of\nStackdriver Logging.<\/p>\n<p>This class provides the ability to make remote calls to the backing service through method\ncalls that map to API methods. Sample code to get started:<\/p>\n<pre><code>try {\n    $configServiceV2Client = new ConfigServiceV2Client();\n    $formattedParent = ConfigServiceV2Client::formatParentName(\"[PROJECT]\");\n    foreach ($configServiceV2Client-&gt;listSinks($formattedParent) as $element) {\n        \/\/ doThingsWith(element);\n    }\n} finally {\n    if (isset($configServiceV2Client)) {\n        $configServiceV2Client-&gt;close();\n    }\n}<\/code><\/pre>\n<p>Many parameters require resource names to be formatted in a particular way. To assist\nwith these names, this class includes a format method for each type of name, and additionally\na parse method to extract the individual identifiers contained within names that are\nreturned.<\/p>","examples":[],"resources":[],"methods":[{"id":"formatParentName","type":"instance","name":"formatParentName","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L100","description":"<p>Formats a string containing the fully-qualified path to represent\na parent resource.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"formatSinkName","type":"instance","name":"formatSinkName","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L111","description":"<p>Formats a string containing the fully-qualified path to represent\na sink resource.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"parseProjectFromParentName","type":"instance","name":"parseProjectFromParentName","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L123","description":"<p>Parses the project from the given fully-qualified path which\nrepresents a parent resource.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"parseProjectFromSinkName","type":"instance","name":"parseProjectFromSinkName","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L132","description":"<p>Parses the project from the given fully-qualified path which\nrepresents a sink resource.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"parseSinkFromSinkName","type":"instance","name":"parseSinkFromSinkName","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L141","description":"<p>Parses the sink from the given fully-qualified path which\nrepresents a sink resource.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"__construct","type":"constructor","name":"__construct","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L214","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"options","description":"<p>Optional. Options for configuring the service API wrapper.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"options.serviceAddress","description":"<p>The domain name of the API remote host. Default 'logging.googleapis.com'.<\/p>","types":["string"],"optional":null,"nullable":null},{"name":"options.port","description":"<p>The port on which to connect to the remote host. Default 443.<\/p>","types":["mixed"],"optional":null,"nullable":null},{"name":"options.sslCreds\n","description":"<p>A <code>ChannelCredentials<\/code> for use with an SSL-enabled channel. Default: a credentials object returned from Grpc\\ChannelCredentials::createSsl()<\/p>","types":["Grpc\\ChannelCredentials"],"optional":null,"nullable":null},{"name":"options.scopes","description":"<p>A string array of scopes to use when acquiring credentials. Default the scopes for the Stackdriver Logging API.<\/p>","types":["array"],"optional":null,"nullable":null},{"name":"options.retryingOverride\n","description":"<p>An associative array of string =&gt; RetryOptions, where the keys are method names (e.g. 'createFoo'), that overrides default retrying settings. A value of null indicates that the method in question should not retry.<\/p>","types":["array"],"optional":null,"nullable":null},{"name":"options.timeoutMillis","description":"<p>The timeout in milliseconds to use for calls that don't use retries. For calls that use retries, set the timeout in RetryOptions. Default: 30000 (30 seconds)<\/p>","types":["int"],"optional":null,"nullable":null},{"name":"options.appName","description":"<p>The codename of the calling service. Default 'gax'.<\/p>","types":["string"],"optional":null,"nullable":null},{"name":"options.appVersion","description":"<p>The version of the calling service. Default: the current version of GAX.<\/p>","types":["string"],"optional":null,"nullable":null},{"name":"options.credentialsLoader\n","description":"<p>A CredentialsLoader object created using the Google\\Auth library.<\/p>","types":["Google\\Auth\\CredentialsLoader"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"listSinks","type":"instance","name":"listSinks","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L333","description":"<p>Lists sinks.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $configServiceV2Client = new ConfigServiceV2Client();\n    $formattedParent = ConfigServiceV2Client::formatParentName(\"[PROJECT]\");\n    foreach ($configServiceV2Client-&gt;listSinks($formattedParent) as $element) {\n        \/\/ doThingsWith(element);\n    }\n} finally {\n    if (isset($configServiceV2Client)) {\n        $configServiceV2Client-&gt;close();\n    }\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"parent","description":"<p>Required. The resource name where this sink was created:<\/p>\n<pre><code>\"projects\/[PROJECT_ID]\"\n\"organizations\/[ORGANIZATION_ID]\"<\/code><\/pre>","types":["string"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"optionalArgs.pageToken\n","description":"<p>A page token is used to specify a page of values to be returned. If no page token is specified (the default), the first page of values will be returned. Any page token used here must have been generated by a previous call to the API.<\/p>","types":["string"],"optional":null,"nullable":null},{"name":"optionalArgs.pageSize\n","description":"<p>The maximum number of resources contained in the underlying API response. The API may return fewer values in a page, even if there are additional values to be retrieved.<\/p>","types":["int"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. If present, then $timeoutMillis is ignored.<\/p>","types":["\\Google\\GAX\\RetrySettings"],"optional":null,"nullable":null},{"name":"optionalArgs.timeoutMillis\n","description":"<p>Timeout to use for this call. Only used if $retrySettings is not set.<\/p>","types":["int"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\GAX\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["\\Google\\GAX\\PagedListResponse"],"description":""}]},{"id":"getSink","type":"instance","name":"getSink","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L395","description":"<p>Gets a sink.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $configServiceV2Client = new ConfigServiceV2Client();\n    $formattedSinkName = ConfigServiceV2Client::formatSinkName(\"[PROJECT]\", \"[SINK]\");\n    $response = $configServiceV2Client-&gt;getSink($formattedSinkName);\n} finally {\n    if (isset($configServiceV2Client)) {\n        $configServiceV2Client-&gt;close();\n    }\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"sinkName","description":"<p>Required. The resource name of the sink to return:<\/p>\n<pre><code>\"projects\/[PROJECT_ID]\/sinks\/[SINK_ID]\"\n\"organizations\/[ORGANIZATION_ID]\/sinks\/[SINK_ID]\"<\/code><\/pre>","types":["string"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. If present, then $timeoutMillis is ignored.<\/p>","types":["\\Google\\GAX\\RetrySettings"],"optional":null,"nullable":null},{"name":"optionalArgs.timeoutMillis\n","description":"<p>Timeout to use for this call. Only used if $retrySettings is not set.<\/p>","types":["int"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\GAX\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["\\google\\logging\\v2\\LogSink"],"description":""}]},{"id":"createSink","type":"instance","name":"createSink","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L460","description":"<p>Creates a sink.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $configServiceV2Client = new ConfigServiceV2Client();\n    $formattedParent = ConfigServiceV2Client::formatParentName(\"[PROJECT]\");\n    $sink = new LogSink();\n    $response = $configServiceV2Client-&gt;createSink($formattedParent, $sink);\n} finally {\n    if (isset($configServiceV2Client)) {\n        $configServiceV2Client-&gt;close();\n    }\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"parent","description":"<p>Required. The resource in which to create the sink:<\/p>\n<pre><code>\"projects\/[PROJECT_ID]\"\n\"organizations\/[ORGANIZATION_ID]\"<\/code><\/pre>","types":["string"],"optional":false,"nullable":null},{"name":"sink","description":"<p>Required. The new sink, whose <code>name<\/code> parameter is a sink identifier that\nis not already in use.<\/p>","types":["\\google\\logging\\v2\\LogSink"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"optionalArgs.uniqueWriterIdentity\n","description":"<p>Optional. Whether the sink will have a dedicated service account returned in the sink's writer_identity. Set this field to be true to export logs from one project to a different project. This field is ignored for non-project sinks (e.g. organization sinks) because those sinks are required to have dedicated service accounts.<\/p>","types":["bool"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. If present, then $timeoutMillis is ignored.<\/p>","types":["\\Google\\GAX\\RetrySettings"],"optional":null,"nullable":null},{"name":"optionalArgs.timeoutMillis\n","description":"<p>Timeout to use for this call. Only used if $retrySettings is not set.<\/p>","types":["int"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\GAX\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["\\google\\logging\\v2\\LogSink"],"description":""}]},{"id":"updateSink","type":"instance","name":"updateSink","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L533","description":"<p>Updates or creates a sink.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $configServiceV2Client = new ConfigServiceV2Client();\n    $formattedSinkName = ConfigServiceV2Client::formatSinkName(\"[PROJECT]\", \"[SINK]\");\n    $sink = new LogSink();\n    $response = $configServiceV2Client-&gt;updateSink($formattedSinkName, $sink);\n} finally {\n    if (isset($configServiceV2Client)) {\n        $configServiceV2Client-&gt;close();\n    }\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"sinkName","description":"<p>Required. The resource name of the sink to update, including the parent\nresource and the sink identifier:<\/p>\n<pre><code>\"projects\/[PROJECT_ID]\/sinks\/[SINK_ID]\"\n\"organizations\/[ORGANIZATION_ID]\/sinks\/[SINK_ID]\"<\/code><\/pre>\n<p>Example: <code>\"projects\/my-project-id\/sinks\/my-sink-id\"<\/code>.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"sink","description":"<p>Required. The updated sink, whose name is the same identifier that appears\nas part of <code>sinkName<\/code>.  If <code>sinkName<\/code> does not exist, then\nthis method creates a new sink.<\/p>","types":["\\google\\logging\\v2\\LogSink"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"optionalArgs.uniqueWriterIdentity\n","description":"<p>Optional. Whether the sink will have a dedicated service account returned in the sink's writer_identity. Set this field to be true to export logs from one project to a different project. This field is ignored for non-project sinks (e.g. organization sinks) because those sinks are required to have dedicated service accounts.<\/p>","types":["bool"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. If present, then $timeoutMillis is ignored.<\/p>","types":["\\Google\\GAX\\RetrySettings"],"optional":null,"nullable":null},{"name":"optionalArgs.timeoutMillis\n","description":"<p>Timeout to use for this call. Only used if $retrySettings is not set.<\/p>","types":["int"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\GAX\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["\\google\\logging\\v2\\LogSink"],"description":""}]},{"id":"deleteSink","type":"instance","name":"deleteSink","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L594","description":"<p>Deletes a sink.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $configServiceV2Client = new ConfigServiceV2Client();\n    $formattedSinkName = ConfigServiceV2Client::formatSinkName(\"[PROJECT]\", \"[SINK]\");\n    $configServiceV2Client-&gt;deleteSink($formattedSinkName);\n} finally {\n    if (isset($configServiceV2Client)) {\n        $configServiceV2Client-&gt;close();\n    }\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"sinkName","description":"<p>Required. The resource name of the sink to delete, including the parent\nresource and the sink identifier:<\/p>\n<pre><code>\"projects\/[PROJECT_ID]\/sinks\/[SINK_ID]\"\n\"organizations\/[ORGANIZATION_ID]\/sinks\/[SINK_ID]\"<\/code><\/pre>\n<p>It is an error if the sink does not exist.<\/p>","types":["string"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["array"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. If present, then $timeoutMillis is ignored.<\/p>","types":["\\Google\\GAX\\RetrySettings"],"optional":null,"nullable":null},{"name":"optionalArgs.timeoutMillis\n","description":"<p>Timeout to use for this call. Only used if $retrySettings is not set.<\/p>","types":["int"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\GAX\\ApiException","description":"if the remote call fails"}],"returns":[]},{"id":"close","type":"instance","name":"close","source":"\/src\/Logging\/V2\/ConfigServiceV2Client.php#L619","description":"<p>Initiates an orderly shutdown in which preexisting calls continue but new\ncalls are immediately cancelled.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]}]}