{"id":"firestore\/firestoreclient","type":"","title":"Google\\Cloud\\Firestore\\FirestoreClient","name":"FirestoreClient","description":"<p>Cloud Firestore is a flexible, scalable, realtime database for mobile, web, and server development.<\/p>\n<p>In production environments, it is highly recommended that you make use of the\nProtobuf PHP extension for improved performance. Protobuf can be installed\nvia <a href=\"https:\/\/pecl.php.net\">PECL<\/a>.<\/p>\n<pre><code>$ pecl install protobuf<\/code><\/pre>","examples":[{"caption":"","code":"use Google\\Cloud\\Firestore\\FirestoreClient;\n\n$firestore = new FirestoreClient();"}],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"src\/Firestore\/FirestoreClient.php#L111","description":"<p>Create a Firestore client. Please note that this client requires\n<a href=\"https:\/\/cloud.google.com\/php\/grpc\">the gRPC extension<\/a>.<\/p>","examples":[],"resources":[],"params":[{"name":"config","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"config.projectId","description":"<p>The project ID from the Google Developer's Console.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"config.authCache","description":"<p>A cache for storing access tokens. <strong>Defaults to<\/strong> a simple in memory implementation.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Firestore\\CacheItemPoolInterface.html\" target=\"_blank\">Google\\Cloud\\Firestore\\CacheItemPoolInterface<\/a>"],"optional":null,"nullable":null},{"name":"config.authCacheOptions","description":"<p>Cache configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"config.authHttpHandler","description":"<p>A handler used to deliver Psr7 requests specifically for authentication.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":null,"nullable":null},{"name":"config.httpHandler","description":"<p>A handler used to deliver Psr7 requests. Only valid for requests sent over REST.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":null,"nullable":null},{"name":"config.keyFile","description":"<p>The contents of the service account credentials .json file retrieved from the Google Developer's Console. Ex: <code>json_decode(file_get_contents($path), true)<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"config.keyFilePath","description":"<p>The full path to your service account credentials .json file retrieved from the Google Developers Console.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"config.retries","description":"<p>Number of retries for a failed request. <strong>Defaults to<\/strong> <code>3<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"config.scopes","description":"<p>Scopes to be used for the request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"config.returnInt64AsObject","description":"<p>If true, 64 bit integers will be returned as a <a data-custom-type=\"cloud-core\/v1.15.1\/core\/int64\">Google\\Cloud\\Core\\Int64<\/a> object for 32 bit platform compatibility. <strong>Defaults to<\/strong> false.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":""},{"type":"\\Google\\Cloud\\Core\\Exception\\GoogleException","description":"If the gRPC extension is not enabled."}],"returns":[]},{"id":"batch","type":"instance","name":"batch","source":"src\/Firestore\/FirestoreClient.php#L145","description":"<p>Get a Batch Writer<\/p>\n<p>The <a data-custom-type=\"firestore\/writebatch\">Google\\Cloud\\Firestore\\WriteBatch<\/a> allows more performant\nmulti-document, atomic updates.<\/p>","examples":[{"caption":"","code":"$batch = $firestore->batch();"}],"resources":[],"params":[],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/writebatch\">Google\\Cloud\\Firestore\\WriteBatch<\/a>"],"description":""}]},{"id":"collection","type":"instance","name":"collection","source":"src\/Firestore\/FirestoreClient.php#L172","description":"<p>Lazily instantiate a Collection reference.<\/p>\n<p>Collections hold Firestore documents. Collections cannot be created or\ndeleted directly - they exist only as implicit namespaces. Once no child\ndocuments remain in a collection, it ceases to exist.<\/p>","examples":[{"caption":"","code":"$collection = $firestore->collection('users');"}],"resources":[],"params":[{"name":"name","description":"<p>The name of the collection.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/collectionreference\">Google\\Cloud\\Firestore\\CollectionReference<\/a>"],"description":""}]},{"id":"collections","type":"instance","name":"collections","source":"src\/Firestore\/FirestoreClient.php#L209","description":"<p>List root-level collections in the database.<\/p>","examples":[{"caption":"","code":"$collections = $firestore->collections();"}],"resources":[{"title":"ListCollectionIds","link":"https:\/\/firebase.google.com\/docs\/firestore\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.ListCollectionIds"}],"params":[{"name":"options","description":"<p>Configuration options<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":true,"nullable":null},{"name":"options.pageSize","description":"<p>Maximum number of results to return per request.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"options.resultLimit","description":"<p>Limit the number of results returned in total. <strong>Defaults to<\/strong> <code>0<\/code> (return all results).<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"options.pageToken","description":"<p>A previously-returned page token used to resume the loading of results from a specific point.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-core\/v1.15.1\/core\/iterator\/itemiterator\">Google\\Cloud\\Core\\Iterator\\ItemIterator<\/a>&lt;<a data-custom-type=\"firestore\/collectionreference\">Google\\Cloud\\Firestore\\CollectionReference<\/a>&gt;"],"description":""}]},{"id":"document","type":"instance","name":"document","source":"src\/Firestore\/FirestoreClient.php#L241","description":"<p>Get a reference to a Firestore document.<\/p>","examples":[{"caption":"","code":"$document = $firestore->document('users\/john');"}],"resources":[],"params":[{"name":"name","description":"<p>The document name or a path, relative to the database.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\InvalidArgumentException","description":"If the given path is not a valid document path."}],"returns":[{"types":["<a data-custom-type=\"firestore\/documentreference\">Google\\Cloud\\Firestore\\DocumentReference<\/a>"],"description":""}]},{"id":"documents","type":"instance","name":"documents","source":"src\/Firestore\/FirestoreClient.php#L299","description":"<p>Get a list of documents by their path.<\/p>\n<p>The number of results generated will be equal to the number of documents\nrequested, except in case of error.<\/p>\n<p>Note that this method will <strong>always<\/strong> return instances of\n<a data-custom-type=\"firestore\/documentsnapshot\">Google\\Cloud\\Firestore\\DocumentSnapshot<\/a>, even if the documents\nrequested do not exist. It is highly recommended that you check for\nexistence before accessing document data.<\/p>","examples":[{"caption":"","code":"$documents = $firestore->documents([\n    'users\/john',\n    'users\/dave'\n]);"},{"caption":"<p>To check whether a given document exists, use <code>DocumentSnapshot::exists()<\/code>.<\/p>","code":"$documents = $firestore->documents([\n    'users\/deleted-user'\n]);\n\nforeach ($documents as $document) {\n    if (!$document->exists()) {\n        echo $document->id() . ' Does Not Exist';\n    }\n}"}],"resources":[{"title":"BatchGetDocuments","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.BatchGetDocuments"}],"params":[{"name":"paths","description":"<p>Any combination of string paths or DocumentReference instances.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string[]<\/a>","<a data-custom-type=\"firestore\/documentreference[]\">Google\\Cloud\\Firestore\\DocumentReference[]<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/documentsnapshot[]\">Google\\Cloud\\Firestore\\DocumentSnapshot[]<\/a>"],"description":""}]},{"id":"runTransaction","type":"instance","name":"runTransaction","source":"src\/Firestore\/FirestoreClient.php#L409","description":"<p>Executes a function in a Firestore transaction.<\/p>\n<p>Transactions offer atomic operations, guaranteeing that either all\nwrites will be applied, or none will be applied. The Google Cloud PHP\nFirestore client also handles automatic retry in cases where transactions\nfail due to a retryable error.<\/p>\n<p>Transactions will be committed once the provided callable has finished\nexecution. Thrown exceptions will prevent commit and trigger a rollback,\nand will bubble up to your level to be handled in whatever fashion is\nappropriate.<\/p>\n<p>This method returns the return value of the given transaction callable.<\/p>","examples":[{"caption":"","code":"use Google\\Cloud\\Firestore\\Transaction;\n\n$transferAmount = 500.00;\n$from = $firestore->document('users\/john');\n$to = $firestore->document('users\/dave');\n\n$toNewBalance = $firestore->runTransaction(function (Transaction $t) use ($from, $to, $transferAmount) {\n    $fromSnapshot = $t->snapshot($from);\n    $toSnapshot = $t->snapshot($to);\n\n    $fromNewBalance = $fromSnapshot['balance'] - $transferAmount;\n    $toNewBalance = $toSnapshot['balance'] + $transferAmount;\n\n    \/\/ If the transaction cannot be completed, throwing any exception\n    \/\/ will trigger a rollback operation.\n    if ($fromNewBalance < 0) {\n        throw new \\Exception('User 1 has insufficient funds!');\n    }\n\n    $t->update($from, [\n        ['path' => 'balance', 'value' => $fromNewBalance]\n    ])->update($to, [\n        ['path' => 'balance', 'value' => $toNewBalance]\n    ]);\n\n    return $toNewBalance;\n});"}],"resources":[{"title":"BeginTransaction","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.BeginTransaction"},{"title":"Commit","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.Commit"},{"title":"Rollback","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.firestore.v1beta1#google.firestore.v1beta1.Firestore.Rollback"}],"params":[{"name":"callable","description":"<p>A callable function, allowing atomic operations\nagainst the Firestore API. Function signature should be of form:\n<code>function (Transaction $t)<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.callable.php\" target=\"_blank\">callable<\/a>"],"optional":false,"nullable":null},{"name":"options","description":"<p>Configuration Options.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.begin","description":"<p>Configuration options for BeginTransaction.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.commit","description":"<p>Configuration options for Commit.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.rollback","description":"<p>Configuration options for rollback.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.maxRetries","description":"<p>The maximum number of times to retry failures. <strong>Defaults to<\/strong> <code>5<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.mixed\" target=\"_blank\">mixed<\/a>"],"description":""}]},{"id":"geoPoint","type":"instance","name":"geoPoint","source":"src\/Firestore\/FirestoreClient.php#L503","description":"<p>Create a new GeoPoint<\/p>","examples":[{"caption":"","code":"$geoPoint = $firestore->geoPoint(37.4220, -122.0841);"}],"resources":[{"title":"LatLng","link":"https:\/\/cloud.google.com\/firestore\/docs\/reference\/rpc\/google.type#google.type.LatLng"}],"params":[{"name":"latitude","description":"<p>The latitude<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.float.php\" target=\"_blank\">float<\/a>"],"optional":false,"nullable":null},{"name":"longitude","description":"<p>The longitude<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.float.php\" target=\"_blank\">float<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-core\/v1.15.1\/core\/geopoint\">Google\\Cloud\\Core\\GeoPoint<\/a>"],"description":""}]},{"id":"blob","type":"instance","name":"blob","source":"src\/Firestore\/FirestoreClient.php#L524","description":"<p>Create a new Blob<\/p>","examples":[{"caption":"","code":"$blob = $firestore->blob('hello world');"},{"caption":"<p>Blobs can be used to store binary data<\/p>","code":"$blob = $firestore->blob(file_get_contents(__DIR__ .'\/family-photo.jpg'));"}],"resources":[],"params":[{"name":"value","description":"<p>The value to store in a blob.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.resource.php\" target=\"_blank\">resource<\/a>","<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Firestore\\StreamInterface.html\" target=\"_blank\">Google\\Cloud\\Firestore\\StreamInterface<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"cloud-core\/v1.15.1\/core\/blob\">Google\\Cloud\\Core\\Blob<\/a>"],"description":""}]},{"id":"fieldPath","type":"instance","name":"fieldPath","source":"src\/Firestore\/FirestoreClient.php#L544","description":"<p>Returns a FieldPath class, referring to a field in a document.<\/p>\n<p>The path may consist of a single field name (referring to a top-level\nfield in the document), or a list of field names (referring to a nested\nfield in the document).<\/p>","examples":[{"caption":"","code":"$path = $firestore->fieldPath(['accounts', 'usd']);"}],"resources":[],"params":[{"name":"fieldNames","description":"<p>A list of field names.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a data-custom-type=\"firestore\/fieldpath\">Google\\Cloud\\Firestore\\FieldPath<\/a>"],"description":""}]}]}