{"id":"bigtable\/v2\/gapic\/bigtablegapicclient","type":"","title":"Google\\Cloud\\Bigtable\\V2\\Gapic\\BigtableGapicClient","name":"BigtableGapicClient","description":"<p>Service Description: Service for reading from and writing to existing Bigtable tables.<\/p>\n<p>EXPERIMENTAL: this client library class has not yet been declared GA (1.0). This means that\neven though we intent the surface to be stable, we may make backwards incompatible changes\nif necessary.<\/p>\n<p>This class provides the ability to make remote calls to the backing service through method\ncalls that map to API methods. Sample code to get started:<\/p>\n<pre><code>try {\n    $bigtableClient = new BigtableClient();\n    $formattedTableName = $bigtableClient-&gt;tableName('[PROJECT]', '[INSTANCE]', '[TABLE]');\n    \/\/ Read all responses until the stream is complete\n    $stream = $bigtableClient-&gt;readRows($formattedTableName);\n    foreach ($stream-&gt;readAll() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n} finally {\n    $bigtableClient-&gt;close();\n}<\/code><\/pre>\n<p>Many parameters require resource names to be formatted in a particular way. To assist\nwith these names, this class includes a format method for each type of name, and additionally\na parseName method to extract the individual identifiers contained within formatted names\nthat are returned by the API.<\/p>","examples":[],"resources":[],"methods":[{"id":"tableName","type":"instance","name":"tableName","source":"src\/Bigtable\/V2\/Gapic\/BigtableGapicClient.php#L177","description":"<p>Formats a string containing the fully-qualified path to represent\na table resource.<\/p>","examples":[],"resources":[],"params":[{"name":"project","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"instance","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"table","description":"","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"description":"<p>The formatted table resource.<\/p>"}]},{"id":"parseName","type":"instance","name":"parseName","source":"src\/Bigtable\/V2\/Gapic\/BigtableGapicClient.php#L205","description":"<p>Parses a formatted name string and returns an associative array of the components in the name.<\/p>\n<p>The following name formats are supported:\nTemplate: Pattern<\/p>\n<ul>\n<li>table: projects\/{project}\/instances\/{instance}\/tables\/{table}.<\/li>\n<\/ul>\n<p>The optional $template argument can be supplied to specify a particular pattern, and must\nmatch one of the templates listed above. If no $template argument is provided, or if the\n$template argument does not match one of the templates listed, then parseName will check\neach of the supported templates, and return the first match.<\/p>","examples":[],"resources":[],"params":[{"name":"formattedName","description":"<p>The formatted name string<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"template","description":"<p>Optional name of template to match<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ValidationException","description":"If $formattedName could not be matched."}],"returns":[{"types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"description":"<p>An associative array from name component IDs to component values.<\/p>"}]},{"id":"__construct","type":"constructor","name":"__construct","source":"src\/Bigtable\/V2\/Gapic\/BigtableGapicClient.php#L268","description":"<p>Constructor.<\/p>","examples":[],"resources":[],"params":[{"name":"options","description":"<p>Optional. Options for configuring the service API wrapper.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"options.serviceAddress","description":"<p>The domain name of the API remote host. Default 'bigtable.googleapis.com'.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.port","description":"<p>The port on which to connect to the remote host. Default 443.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.pseudo-types.php#language.types.mixed\" target=\"_blank\">mixed<\/a>"],"optional":null,"nullable":null},{"name":"options.channel\n","description":"<p>A <code>Channel<\/code> object to be used by gRPC. If not specified, a channel will be constructed.<\/p>","types":["\\Grpc\\Channel"],"optional":null,"nullable":null},{"name":"options.sslCreds\n","description":"<p>A <code>ChannelCredentials<\/code> object for use with an SSL-enabled channel. Default: a credentials object returned from \\Grpc\\ChannelCredentials::createSsl() NOTE: if the $channel optional argument is specified, then this argument is unused.<\/p>","types":["\\Grpc\\ChannelCredentials"],"optional":null,"nullable":null},{"name":"options.forceNewChannel\n","description":"<p>If true, this forces gRPC to create a new channel instead of using a persistent channel. Defaults to false. NOTE: if the $channel optional argument is specified, then this option is unused.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.boolean.php\" target=\"_blank\">bool<\/a>"],"optional":null,"nullable":null},{"name":"options.credentialsLoader\n","description":"<p>A CredentialsLoader object created using the Google\\Auth library.<\/p>","types":["<a href=\"https:\/\/github.com\/google\/google-auth-library-php\/blob\/master\/src\/CredentialsLoader.php\" target=\"_blank\">Google\\Auth\\CredentialsLoader<\/a>"],"optional":null,"nullable":null},{"name":"options.scopes","description":"<p>A string array of scopes to use when acquiring credentials. Defaults to the scopes for the Google Cloud Bigtable API.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null},{"name":"options.clientConfigPath\n","description":"<p>Path to a JSON file containing client method configuration, including retry settings. Specify this setting to specify the retry behavior of all methods on the client. By default this settings points to the default client config file, which is provided in the resources folder. The retry settings provided in this option can be overridden by settings in $retryingOverride<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":null,"nullable":null},{"name":"options.retryingOverride\n","description":"<p>An associative array in which the keys are method names (e.g. 'createFoo'), and the values are retry settings to use for that method. The retry settings for each method can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage. Passing a value of null is equivalent to a value of ['retriesEnabled' =&gt; false]. Retry settings provided in this setting override the settings in $clientConfigPath.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[],"returns":[]},{"id":"readRows","type":"instance","name":"readRows","source":"src\/Bigtable\/V2\/Gapic\/BigtableGapicClient.php#L381","description":"<p>Streams back the contents of all requested rows in key order, optionally\napplying the same Reader filter to each. Depending on their size,\nrows and cells may be broken up across multiple responses, but\natomicity of each row will still be preserved. See the\nReadRowsResponse documentation for details.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $bigtableClient = new BigtableClient();\n    $formattedTableName = $bigtableClient-&gt;tableName('[PROJECT]', '[INSTANCE]', '[TABLE]');\n    \/\/ Read all responses until the stream is complete\n    $stream = $bigtableClient-&gt;readRows($formattedTableName);\n    foreach ($stream-&gt;readAll() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n} finally {\n    $bigtableClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"tableName","description":"<p>The unique name of the table from which to read.\nValues are of the form\n<code>projects\/&lt;project&gt;\/instances\/&lt;instance&gt;\/tables\/&lt;table&gt;<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.rows\n","description":"<p>The row keys and\/or ranges to read. If not specified, reads from all rows.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\RowSet.html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\RowSet<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.filter\n","description":"<p>The filter to apply to the contents of the specified row(s). If unset, reads the entirety of each row.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\RowFilter.html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\RowFilter<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.rowsLimit\n","description":"<p>The read will terminate after committing to N rows' worth of results. The default (zero) is to return all results.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.timeoutMillis\n","description":"<p>Timeout to use for this call.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/ServerStream.html\" target=\"_blank\">Google\\ApiCore\\ServerStream<\/a>"],"description":""}]},{"id":"sampleRowKeys","type":"instance","name":"sampleRowKeys","source":"src\/Bigtable\/V2\/Gapic\/BigtableGapicClient.php#L458","description":"<p>Returns a sample of row keys in the table. The returned row keys will\ndelimit contiguous sections of the table of approximately equal size,\nwhich can be used to break up the data for distributed tasks like\nmapreduces.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $bigtableClient = new BigtableClient();\n    $formattedTableName = $bigtableClient-&gt;tableName('[PROJECT]', '[INSTANCE]', '[TABLE]');\n    \/\/ Read all responses until the stream is complete\n    $stream = $bigtableClient-&gt;sampleRowKeys($formattedTableName);\n    foreach ($stream-&gt;readAll() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n} finally {\n    $bigtableClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"tableName","description":"<p>The unique name of the table from which to sample row keys.\nValues are of the form\n<code>projects\/&lt;project&gt;\/instances\/&lt;instance&gt;\/tables\/&lt;table&gt;<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.timeoutMillis\n","description":"<p>Timeout to use for this call.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/ServerStream.html\" target=\"_blank\">Google\\ApiCore\\ServerStream<\/a>"],"description":""}]},{"id":"mutateRow","type":"instance","name":"mutateRow","source":"src\/Bigtable\/V2\/Gapic\/BigtableGapicClient.php#L529","description":"<p>Mutates a row atomically. Cells already present in the row are left\nunchanged unless explicitly changed by <code>mutation<\/code>.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $bigtableClient = new BigtableClient();\n    $formattedTableName = $bigtableClient-&gt;tableName('[PROJECT]', '[INSTANCE]', '[TABLE]');\n    $rowKey = '';\n    $mutations = [];\n    $response = $bigtableClient-&gt;mutateRow($formattedTableName, $rowKey, $mutations);\n} finally {\n    $bigtableClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"tableName","description":"<p>The unique name of the table to which the mutation should be applied.\nValues are of the form\n<code>projects\/&lt;project&gt;\/instances\/&lt;instance&gt;\/tables\/&lt;table&gt;<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"rowKey","description":"<p>The key of the row to which the mutation should be applied.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"mutations","description":"<p>Changes to be atomically applied to the specified row. Entries are applied\nin order, meaning that earlier mutations can be masked by later ones.\nMust contain at least one entry and at most 100000.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\Mutation[].html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\Mutation[]<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\MutateRowResponse.html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\MutateRowResponse<\/a>"],"description":""}]},{"id":"mutateRows","type":"instance","name":"mutateRows","source":"src\/Bigtable\/V2\/Gapic\/BigtableGapicClient.php#L595","description":"<p>Mutates multiple rows in a batch. Each individual row is mutated\natomically as in MutateRow, but the entire batch is not executed\natomically.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $bigtableClient = new BigtableClient();\n    $formattedTableName = $bigtableClient-&gt;tableName('[PROJECT]', '[INSTANCE]', '[TABLE]');\n    $entries = [];\n    \/\/ Read all responses until the stream is complete\n    $stream = $bigtableClient-&gt;mutateRows($formattedTableName, $entries);\n    foreach ($stream-&gt;readAll() as $element) {\n        \/\/ doSomethingWith($element);\n    }\n} finally {\n    $bigtableClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"tableName","description":"<p>The unique name of the table to which the mutations should be applied.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"entries","description":"<p>The row keys and corresponding mutations to be applied in bulk.\nEach entry is applied as an atomic mutation, but the entries may be\napplied in arbitrary order (even between entries for the same row).\nAt least one entry must be specified, and in total the entries can\ncontain at most 100000 mutations.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\MutateRowsRequest_Entry[].html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\MutateRowsRequest_Entry[]<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.timeoutMillis\n","description":"<p>Timeout to use for this call.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.integer.php\" target=\"_blank\">int<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/ServerStream.html\" target=\"_blank\">Google\\ApiCore\\ServerStream<\/a>"],"description":""}]},{"id":"checkAndMutateRow","type":"instance","name":"checkAndMutateRow","source":"src\/Bigtable\/V2\/Gapic\/BigtableGapicClient.php#L680","description":"<p>Mutates a row atomically based on the output of a predicate Reader filter.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $bigtableClient = new BigtableClient();\n    $formattedTableName = $bigtableClient-&gt;tableName('[PROJECT]', '[INSTANCE]', '[TABLE]');\n    $rowKey = '';\n    $response = $bigtableClient-&gt;checkAndMutateRow($formattedTableName, $rowKey);\n} finally {\n    $bigtableClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"tableName","description":"<p>The unique name of the table to which the conditional mutation should be\napplied.\nValues are of the form\n<code>projects\/&lt;project&gt;\/instances\/&lt;instance&gt;\/tables\/&lt;table&gt;<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"rowKey","description":"<p>The key of the row to which the conditional mutation should be applied.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.predicateFilter\n","description":"<p>The filter to be applied to the contents of the specified row. Depending on whether or not any results are yielded, either <code>true_mutations<\/code> or <code>false_mutations<\/code> will be executed. If unset, checks that the row contains any values at all.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\RowFilter.html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\RowFilter<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.trueMutations\n","description":"<p>Changes to be atomically applied to the specified row if <code>predicate_filter<\/code> yields at least one cell when applied to <code>row_key<\/code>. Entries are applied in order, meaning that earlier mutations can be masked by later ones. Must contain at least one entry if <code>false_mutations<\/code> is empty, and at most 100000.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\Mutation[].html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\Mutation[]<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.falseMutations\n","description":"<p>Changes to be atomically applied to the specified row if <code>predicate_filter<\/code> does not yield any cells when applied to <code>row_key<\/code>. Entries are applied in order, meaning that earlier mutations can be masked by later ones. Must contain at least one entry if <code>true_mutations<\/code> is empty, and at most 100000.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\Mutation[].html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\Mutation[]<\/a>"],"optional":null,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\CheckAndMutateRowResponse.html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\CheckAndMutateRowResponse<\/a>"],"description":""}]},{"id":"readModifyWriteRow","type":"instance","name":"readModifyWriteRow","source":"src\/Bigtable\/V2\/Gapic\/BigtableGapicClient.php#L758","description":"<p>Modifies a row atomically. The method reads the latest existing timestamp\nand value from the specified columns and writes a new entry based on\npre-defined read\/modify\/write rules. The new value for the timestamp is the\ngreater of the existing timestamp or the current server time. The method\nreturns the new contents of all modified cells.<\/p>\n<p>Sample code:<\/p>\n<pre><code>try {\n    $bigtableClient = new BigtableClient();\n    $formattedTableName = $bigtableClient-&gt;tableName('[PROJECT]', '[INSTANCE]', '[TABLE]');\n    $rowKey = '';\n    $rules = [];\n    $response = $bigtableClient-&gt;readModifyWriteRow($formattedTableName, $rowKey, $rules);\n} finally {\n    $bigtableClient-&gt;close();\n}<\/code><\/pre>","examples":[],"resources":[],"params":[{"name":"tableName","description":"<p>The unique name of the table to which the read\/modify\/write rules should be\napplied.\nValues are of the form\n<code>projects\/&lt;project&gt;\/instances\/&lt;instance&gt;\/tables\/&lt;table&gt;<\/code>.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"rowKey","description":"<p>The key of the row to which the read\/modify\/write rules should be applied.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.string.php\" target=\"_blank\">string<\/a>"],"optional":false,"nullable":null},{"name":"rules","description":"<p>Rules specifying how the specified row's contents are to be transformed\ninto writes. Entries are applied in order, meaning that earlier rules will\naffect the results of later ones.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\ReadModifyWriteRule[].html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\ReadModifyWriteRule[]<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs","description":"<p>Optional.<\/p>","types":["<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":false,"nullable":null},{"name":"optionalArgs.retrySettings\n","description":"<p>Retry settings to use for this call. Can be a <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> object, or an associative array of retry settings parameters. See the documentation on <a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a> for example usage.<\/p>","types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/ApiCore\/RetrySettings.html\" target=\"_blank\">Google\\ApiCore\\RetrySettings<\/a>","<a href=\"http:\/\/php.net\/manual\/en\/language.types.array.php\" target=\"_blank\">array<\/a>"],"optional":null,"nullable":null}],"exceptions":[{"type":"\\Google\\ApiCore\\ApiException","description":"if the remote call fails"}],"returns":[{"types":["<a href=\"https:\/\/googleapis.github.io\/gax-php\/#Google\/Cloud\/Bigtable\\V2\\ReadModifyWriteRowResponse.html\" target=\"_blank\">Google\\Cloud\\Bigtable\\V2\\ReadModifyWriteRowResponse<\/a>"],"description":""}]},{"id":"close","type":"instance","name":"close","source":"src\/Bigtable\/V2\/Gapic\/BigtableGapicClient.php#L791","description":"<p>Initiates an orderly shutdown in which preexisting calls continue but new\ncalls are immediately cancelled.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]}]}