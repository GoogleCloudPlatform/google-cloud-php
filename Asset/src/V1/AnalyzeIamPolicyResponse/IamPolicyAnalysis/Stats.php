<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/asset/v1/asset_service.proto

namespace Google\Cloud\Asset\V1\AnalyzeIamPolicyResponse\IamPolicyAnalysis;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * A stats message that contains a set of analysis metrics.
 * Here are some equations to show relationships of the explicitly specified
 * metrics with other implicit metrics:
 * * node_count = discovered_node_count + undiscovered_node_count(implicit)
 * * discovered_node_count = explored_node_count +
 * unexplored_node_count(implicit)
 * * explored_node_count = capped_node_count + uncapped_node_count(implicit)
 * * unexplored_node_count(implicit) = permission_denied_node_count +
 * execution_timeout_node_count + other_unexplored_node_count(implicit)
 * * discovered_node_count = matched_node_count +
 * unmatched_node_count(implicit)
 *
 * Generated from protobuf message <code>google.cloud.asset.v1.AnalyzeIamPolicyResponse.IamPolicyAnalysis.Stats</code>
 */
class Stats extends \Google\Protobuf\Internal\Message
{
    /**
     * Node type.
     *
     * Generated from protobuf field <code>.google.cloud.asset.v1.AnalyzeIamPolicyResponse.IamPolicyAnalysis.Stats.NodeType node_type = 1;</code>
     */
    private $node_type = 0;
    /**
     * The subtype of a node, such as:
     * * For Identity: Group, User, ServiceAccount etc.
     * * For Resource: resource type name, such as
     * cloudresourcemanager.googleapis.com/Organization, etc.
     * * For Access: Role or Permission
     *
     * Generated from protobuf field <code>string node_subtype = 2;</code>
     */
    private $node_subtype = '';
    /**
     * The count of discovered nodes.
     *
     * Generated from protobuf field <code>int32 discovered_node_count = 3;</code>
     */
    private $discovered_node_count = 0;
    /**
     * The count of nodes that match the query. These nodes form a sub-graph
     * of discovered nodes.
     *
     * Generated from protobuf field <code>int32 matched_node_count = 4;</code>
     */
    private $matched_node_count = 0;
    /**
     * The count of explored nodes.
     *
     * Generated from protobuf field <code>int32 explored_node_count = 5;</code>
     */
    private $explored_node_count = 0;
    /**
     * The count of nodes that get explored, but are capped by max fanout
     * setting.
     *
     * Generated from protobuf field <code>int32 capped_node_count = 6;</code>
     */
    private $capped_node_count = 0;
    /**
     * The count of unexplored nodes caused by permission denied error.
     *
     * Generated from protobuf field <code>int32 permision_denied_node_count = 7;</code>
     */
    private $permision_denied_node_count = 0;
    /**
     * The count of unexplored nodes caused by execution timeout.
     *
     * Generated from protobuf field <code>int32 execution_timeout_node_count = 8;</code>
     */
    private $execution_timeout_node_count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $node_type
     *           Node type.
     *     @type string $node_subtype
     *           The subtype of a node, such as:
     *           * For Identity: Group, User, ServiceAccount etc.
     *           * For Resource: resource type name, such as
     *           cloudresourcemanager.googleapis.com/Organization, etc.
     *           * For Access: Role or Permission
     *     @type int $discovered_node_count
     *           The count of discovered nodes.
     *     @type int $matched_node_count
     *           The count of nodes that match the query. These nodes form a sub-graph
     *           of discovered nodes.
     *     @type int $explored_node_count
     *           The count of explored nodes.
     *     @type int $capped_node_count
     *           The count of nodes that get explored, but are capped by max fanout
     *           setting.
     *     @type int $permision_denied_node_count
     *           The count of unexplored nodes caused by permission denied error.
     *     @type int $execution_timeout_node_count
     *           The count of unexplored nodes caused by execution timeout.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Asset\V1\AssetService::initOnce();
        parent::__construct($data);
    }

    /**
     * Node type.
     *
     * Generated from protobuf field <code>.google.cloud.asset.v1.AnalyzeIamPolicyResponse.IamPolicyAnalysis.Stats.NodeType node_type = 1;</code>
     * @return int
     */
    public function getNodeType()
    {
        return $this->node_type;
    }

    /**
     * Node type.
     *
     * Generated from protobuf field <code>.google.cloud.asset.v1.AnalyzeIamPolicyResponse.IamPolicyAnalysis.Stats.NodeType node_type = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setNodeType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Asset\V1\AnalyzeIamPolicyResponse\IamPolicyAnalysis\Stats\NodeType::class);
        $this->node_type = $var;

        return $this;
    }

    /**
     * The subtype of a node, such as:
     * * For Identity: Group, User, ServiceAccount etc.
     * * For Resource: resource type name, such as
     * cloudresourcemanager.googleapis.com/Organization, etc.
     * * For Access: Role or Permission
     *
     * Generated from protobuf field <code>string node_subtype = 2;</code>
     * @return string
     */
    public function getNodeSubtype()
    {
        return $this->node_subtype;
    }

    /**
     * The subtype of a node, such as:
     * * For Identity: Group, User, ServiceAccount etc.
     * * For Resource: resource type name, such as
     * cloudresourcemanager.googleapis.com/Organization, etc.
     * * For Access: Role or Permission
     *
     * Generated from protobuf field <code>string node_subtype = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setNodeSubtype($var)
    {
        GPBUtil::checkString($var, True);
        $this->node_subtype = $var;

        return $this;
    }

    /**
     * The count of discovered nodes.
     *
     * Generated from protobuf field <code>int32 discovered_node_count = 3;</code>
     * @return int
     */
    public function getDiscoveredNodeCount()
    {
        return $this->discovered_node_count;
    }

    /**
     * The count of discovered nodes.
     *
     * Generated from protobuf field <code>int32 discovered_node_count = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setDiscoveredNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->discovered_node_count = $var;

        return $this;
    }

    /**
     * The count of nodes that match the query. These nodes form a sub-graph
     * of discovered nodes.
     *
     * Generated from protobuf field <code>int32 matched_node_count = 4;</code>
     * @return int
     */
    public function getMatchedNodeCount()
    {
        return $this->matched_node_count;
    }

    /**
     * The count of nodes that match the query. These nodes form a sub-graph
     * of discovered nodes.
     *
     * Generated from protobuf field <code>int32 matched_node_count = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setMatchedNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->matched_node_count = $var;

        return $this;
    }

    /**
     * The count of explored nodes.
     *
     * Generated from protobuf field <code>int32 explored_node_count = 5;</code>
     * @return int
     */
    public function getExploredNodeCount()
    {
        return $this->explored_node_count;
    }

    /**
     * The count of explored nodes.
     *
     * Generated from protobuf field <code>int32 explored_node_count = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setExploredNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->explored_node_count = $var;

        return $this;
    }

    /**
     * The count of nodes that get explored, but are capped by max fanout
     * setting.
     *
     * Generated from protobuf field <code>int32 capped_node_count = 6;</code>
     * @return int
     */
    public function getCappedNodeCount()
    {
        return $this->capped_node_count;
    }

    /**
     * The count of nodes that get explored, but are capped by max fanout
     * setting.
     *
     * Generated from protobuf field <code>int32 capped_node_count = 6;</code>
     * @param int $var
     * @return $this
     */
    public function setCappedNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->capped_node_count = $var;

        return $this;
    }

    /**
     * The count of unexplored nodes caused by permission denied error.
     *
     * Generated from protobuf field <code>int32 permision_denied_node_count = 7;</code>
     * @return int
     */
    public function getPermisionDeniedNodeCount()
    {
        return $this->permision_denied_node_count;
    }

    /**
     * The count of unexplored nodes caused by permission denied error.
     *
     * Generated from protobuf field <code>int32 permision_denied_node_count = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setPermisionDeniedNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->permision_denied_node_count = $var;

        return $this;
    }

    /**
     * The count of unexplored nodes caused by execution timeout.
     *
     * Generated from protobuf field <code>int32 execution_timeout_node_count = 8;</code>
     * @return int
     */
    public function getExecutionTimeoutNodeCount()
    {
        return $this->execution_timeout_node_count;
    }

    /**
     * The count of unexplored nodes caused by execution timeout.
     *
     * Generated from protobuf field <code>int32 execution_timeout_node_count = 8;</code>
     * @param int $var
     * @return $this
     */
    public function setExecutionTimeoutNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->execution_timeout_node_count = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Stats::class, \Google\Cloud\Asset\V1\AnalyzeIamPolicyResponse_IamPolicyAnalysis_Stats::class);

