<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/irm/v1alpha2/incidents_service.proto

namespace Google\Cloud\Irm\V1alpha2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Request for the SearchIncidents method.
 *
 * Generated from protobuf message <code>google.cloud.irm.v1alpha2.SearchIncidentsRequest</code>
 */
class SearchIncidentsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * The resource name of the hosting Stackdriver project which requested
     * incidents belong to.
     *
     * Generated from protobuf field <code>string parent = 1;</code>
     */
    private $parent = '';
    /**
     * An expression that defines which incidents to return.
     * Search atoms can be used to match certain specific fields.  Otherwise,
     * plain text will match text fields in the incident.
     * Search atoms:
     * * `start` - (timestamp) The time the incident started.
     * * `stage` - The stage of the incident, one of detected, triaged, mitigated,
     *   resolved, documented, or duplicate (which correspond to values in the
     *   Incident.Stage enum). These are ordered, so `stage<resolved` is
     *   equivalent to `stage:detected OR stage:triaged OR stage:mitigated`.
     * * `severity` - (Incident.Severity) The severity of the incident.
     *    + Supports matching on a specific severity (e.g., `severity:major`) or
     *      on a range (e.g., `severity>medium`, `severity<=minor`, etc.).
     * Timestamp formats:
     * * yyyy-MM-dd - an absolute date, treated as a calendar-day-wide window.
     *   In other words, the "<" operator will match dates before that date, the
     *   ">" operator will match dates after that date, and the ":" or "="
     *   operators will match the entire day.
     * * Nd (e.g. 7d) - a relative number of days ago, treated as a moment in time
     *   (as opposed to a day-wide span) a multiple of 24 hours ago (as opposed to
     *   calendar days).  In the case of daylight savings time, it will apply the
     *   current timezone to both ends of the range.  Note that exact matching
     *   (e.g. `start:7d`) is unlikely to be useful because that would only match
     *   incidents created precisely at a particular instant in time.
     * Examples:
     * * `foo` - matches incidents containing the word "foo"
     * * `"foo bar"` - matches incidents containing the phrase "foo bar"
     * * `foo bar` or `foo AND bar` - matches incidents containing the words "foo"
     *   and "bar"
     * * `foo -bar` or `foo AND NOT bar` - matches incidents containing the word
     *   "foo" but not the word "bar"
     * * `foo OR bar` - matches incidents containing the word "foo" or the word
     *   "bar"
     * * `start>2018-11-28` - matches incidents which started after November 11,
     *   2018.
     * * `start<=2018-11-28` - matches incidents which started on or before
     *   November 11, 2018.
     * * `start:2018-11-28` - matches incidents which started on November 11,
     *   2018.
     * * `start>7d` - matches incidents which started after the point in time 7*24
     *   hours ago
     * * `start>180d` - similar to 7d, but likely to cross the daylight savings
     *   time boundary, so the end time will be 1 hour different from "now."
     * * `foo AND start>90d AND stage<resolved` - unresolved incidents from the
     *   past 90 days containing the word "foo"
     *
     * Generated from protobuf field <code>string query = 2;</code>
     */
    private $query = '';
    /**
     * Number of incidents to return.
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     */
    private $page_size = 0;
    /**
     * Page token from an earlier query, as returned in `next_page_token`.
     *
     * Generated from protobuf field <code>string page_token = 4;</code>
     */
    private $page_token = '';
    /**
     * The time zone name. It should be an IANA TZ name, such as
     * "America/Los_Angeles". For more information,
     * see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
     * If no time zone is specified, the default is UTC.
     *
     * Generated from protobuf field <code>string time_zone = 5;</code>
     */
    private $time_zone = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $parent
     *           The resource name of the hosting Stackdriver project which requested
     *           incidents belong to.
     *     @type string $query
     *           An expression that defines which incidents to return.
     *           Search atoms can be used to match certain specific fields.  Otherwise,
     *           plain text will match text fields in the incident.
     *           Search atoms:
     *           * `start` - (timestamp) The time the incident started.
     *           * `stage` - The stage of the incident, one of detected, triaged, mitigated,
     *             resolved, documented, or duplicate (which correspond to values in the
     *             Incident.Stage enum). These are ordered, so `stage<resolved` is
     *             equivalent to `stage:detected OR stage:triaged OR stage:mitigated`.
     *           * `severity` - (Incident.Severity) The severity of the incident.
     *              + Supports matching on a specific severity (e.g., `severity:major`) or
     *                on a range (e.g., `severity>medium`, `severity<=minor`, etc.).
     *           Timestamp formats:
     *           * yyyy-MM-dd - an absolute date, treated as a calendar-day-wide window.
     *             In other words, the "<" operator will match dates before that date, the
     *             ">" operator will match dates after that date, and the ":" or "="
     *             operators will match the entire day.
     *           * Nd (e.g. 7d) - a relative number of days ago, treated as a moment in time
     *             (as opposed to a day-wide span) a multiple of 24 hours ago (as opposed to
     *             calendar days).  In the case of daylight savings time, it will apply the
     *             current timezone to both ends of the range.  Note that exact matching
     *             (e.g. `start:7d`) is unlikely to be useful because that would only match
     *             incidents created precisely at a particular instant in time.
     *           Examples:
     *           * `foo` - matches incidents containing the word "foo"
     *           * `"foo bar"` - matches incidents containing the phrase "foo bar"
     *           * `foo bar` or `foo AND bar` - matches incidents containing the words "foo"
     *             and "bar"
     *           * `foo -bar` or `foo AND NOT bar` - matches incidents containing the word
     *             "foo" but not the word "bar"
     *           * `foo OR bar` - matches incidents containing the word "foo" or the word
     *             "bar"
     *           * `start>2018-11-28` - matches incidents which started after November 11,
     *             2018.
     *           * `start<=2018-11-28` - matches incidents which started on or before
     *             November 11, 2018.
     *           * `start:2018-11-28` - matches incidents which started on November 11,
     *             2018.
     *           * `start>7d` - matches incidents which started after the point in time 7*24
     *             hours ago
     *           * `start>180d` - similar to 7d, but likely to cross the daylight savings
     *             time boundary, so the end time will be 1 hour different from "now."
     *           * `foo AND start>90d AND stage<resolved` - unresolved incidents from the
     *             past 90 days containing the word "foo"
     *     @type int $page_size
     *           Number of incidents to return.
     *     @type string $page_token
     *           Page token from an earlier query, as returned in `next_page_token`.
     *     @type string $time_zone
     *           The time zone name. It should be an IANA TZ name, such as
     *           "America/Los_Angeles". For more information,
     *           see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
     *           If no time zone is specified, the default is UTC.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Google\Cloud\Irm\V1Alpha2\IncidentsService::initOnce();
        parent::__construct($data);
    }

    /**
     * The resource name of the hosting Stackdriver project which requested
     * incidents belong to.
     *
     * Generated from protobuf field <code>string parent = 1;</code>
     * @return string
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * The resource name of the hosting Stackdriver project which requested
     * incidents belong to.
     *
     * Generated from protobuf field <code>string parent = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;

        return $this;
    }

    /**
     * An expression that defines which incidents to return.
     * Search atoms can be used to match certain specific fields.  Otherwise,
     * plain text will match text fields in the incident.
     * Search atoms:
     * * `start` - (timestamp) The time the incident started.
     * * `stage` - The stage of the incident, one of detected, triaged, mitigated,
     *   resolved, documented, or duplicate (which correspond to values in the
     *   Incident.Stage enum). These are ordered, so `stage<resolved` is
     *   equivalent to `stage:detected OR stage:triaged OR stage:mitigated`.
     * * `severity` - (Incident.Severity) The severity of the incident.
     *    + Supports matching on a specific severity (e.g., `severity:major`) or
     *      on a range (e.g., `severity>medium`, `severity<=minor`, etc.).
     * Timestamp formats:
     * * yyyy-MM-dd - an absolute date, treated as a calendar-day-wide window.
     *   In other words, the "<" operator will match dates before that date, the
     *   ">" operator will match dates after that date, and the ":" or "="
     *   operators will match the entire day.
     * * Nd (e.g. 7d) - a relative number of days ago, treated as a moment in time
     *   (as opposed to a day-wide span) a multiple of 24 hours ago (as opposed to
     *   calendar days).  In the case of daylight savings time, it will apply the
     *   current timezone to both ends of the range.  Note that exact matching
     *   (e.g. `start:7d`) is unlikely to be useful because that would only match
     *   incidents created precisely at a particular instant in time.
     * Examples:
     * * `foo` - matches incidents containing the word "foo"
     * * `"foo bar"` - matches incidents containing the phrase "foo bar"
     * * `foo bar` or `foo AND bar` - matches incidents containing the words "foo"
     *   and "bar"
     * * `foo -bar` or `foo AND NOT bar` - matches incidents containing the word
     *   "foo" but not the word "bar"
     * * `foo OR bar` - matches incidents containing the word "foo" or the word
     *   "bar"
     * * `start>2018-11-28` - matches incidents which started after November 11,
     *   2018.
     * * `start<=2018-11-28` - matches incidents which started on or before
     *   November 11, 2018.
     * * `start:2018-11-28` - matches incidents which started on November 11,
     *   2018.
     * * `start>7d` - matches incidents which started after the point in time 7*24
     *   hours ago
     * * `start>180d` - similar to 7d, but likely to cross the daylight savings
     *   time boundary, so the end time will be 1 hour different from "now."
     * * `foo AND start>90d AND stage<resolved` - unresolved incidents from the
     *   past 90 days containing the word "foo"
     *
     * Generated from protobuf field <code>string query = 2;</code>
     * @return string
     */
    public function getQuery()
    {
        return $this->query;
    }

    /**
     * An expression that defines which incidents to return.
     * Search atoms can be used to match certain specific fields.  Otherwise,
     * plain text will match text fields in the incident.
     * Search atoms:
     * * `start` - (timestamp) The time the incident started.
     * * `stage` - The stage of the incident, one of detected, triaged, mitigated,
     *   resolved, documented, or duplicate (which correspond to values in the
     *   Incident.Stage enum). These are ordered, so `stage<resolved` is
     *   equivalent to `stage:detected OR stage:triaged OR stage:mitigated`.
     * * `severity` - (Incident.Severity) The severity of the incident.
     *    + Supports matching on a specific severity (e.g., `severity:major`) or
     *      on a range (e.g., `severity>medium`, `severity<=minor`, etc.).
     * Timestamp formats:
     * * yyyy-MM-dd - an absolute date, treated as a calendar-day-wide window.
     *   In other words, the "<" operator will match dates before that date, the
     *   ">" operator will match dates after that date, and the ":" or "="
     *   operators will match the entire day.
     * * Nd (e.g. 7d) - a relative number of days ago, treated as a moment in time
     *   (as opposed to a day-wide span) a multiple of 24 hours ago (as opposed to
     *   calendar days).  In the case of daylight savings time, it will apply the
     *   current timezone to both ends of the range.  Note that exact matching
     *   (e.g. `start:7d`) is unlikely to be useful because that would only match
     *   incidents created precisely at a particular instant in time.
     * Examples:
     * * `foo` - matches incidents containing the word "foo"
     * * `"foo bar"` - matches incidents containing the phrase "foo bar"
     * * `foo bar` or `foo AND bar` - matches incidents containing the words "foo"
     *   and "bar"
     * * `foo -bar` or `foo AND NOT bar` - matches incidents containing the word
     *   "foo" but not the word "bar"
     * * `foo OR bar` - matches incidents containing the word "foo" or the word
     *   "bar"
     * * `start>2018-11-28` - matches incidents which started after November 11,
     *   2018.
     * * `start<=2018-11-28` - matches incidents which started on or before
     *   November 11, 2018.
     * * `start:2018-11-28` - matches incidents which started on November 11,
     *   2018.
     * * `start>7d` - matches incidents which started after the point in time 7*24
     *   hours ago
     * * `start>180d` - similar to 7d, but likely to cross the daylight savings
     *   time boundary, so the end time will be 1 hour different from "now."
     * * `foo AND start>90d AND stage<resolved` - unresolved incidents from the
     *   past 90 days containing the word "foo"
     *
     * Generated from protobuf field <code>string query = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setQuery($var)
    {
        GPBUtil::checkString($var, True);
        $this->query = $var;

        return $this;
    }

    /**
     * Number of incidents to return.
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     * @return int
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * Number of incidents to return.
     *
     * Generated from protobuf field <code>int32 page_size = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;

        return $this;
    }

    /**
     * Page token from an earlier query, as returned in `next_page_token`.
     *
     * Generated from protobuf field <code>string page_token = 4;</code>
     * @return string
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * Page token from an earlier query, as returned in `next_page_token`.
     *
     * Generated from protobuf field <code>string page_token = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;

        return $this;
    }

    /**
     * The time zone name. It should be an IANA TZ name, such as
     * "America/Los_Angeles". For more information,
     * see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
     * If no time zone is specified, the default is UTC.
     *
     * Generated from protobuf field <code>string time_zone = 5;</code>
     * @return string
     */
    public function getTimeZone()
    {
        return $this->time_zone;
    }

    /**
     * The time zone name. It should be an IANA TZ name, such as
     * "America/Los_Angeles". For more information,
     * see https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.
     * If no time zone is specified, the default is UTC.
     *
     * Generated from protobuf field <code>string time_zone = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setTimeZone($var)
    {
        GPBUtil::checkString($var, True);
        $this->time_zone = $var;

        return $this;
    }

}

