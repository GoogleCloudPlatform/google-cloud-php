<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/firestore/v1beta1/firestore_admin.proto

namespace Google\Firestore\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Statistical storage information.
 *
 * Generated from protobuf message <code>google.firestore.v1beta1.StorageUsage</code>
 */
class StorageUsage extends \Google\Protobuf\Internal\Message
{
    /**
     * The total number of entries.
     *
     * Generated from protobuf field <code>int64 total_entries = 1;</code>
     */
    private $total_entries = 0;
    /**
     * The total number of bytes used.
     *
     * Generated from protobuf field <code>int64 total_bytes = 2;</code>
     */
    private $total_bytes = 0;

    public function __construct() {
        \GPBMetadata\Google\Firestore\V1Beta1\FirestoreAdmin::initOnce();
        parent::__construct();
    }

    /**
     * The total number of entries.
     *
     * Generated from protobuf field <code>int64 total_entries = 1;</code>
     * @return int|string
     */
    public function getTotalEntries()
    {
        return $this->total_entries;
    }

    /**
     * The total number of entries.
     *
     * Generated from protobuf field <code>int64 total_entries = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTotalEntries($var)
    {
        GPBUtil::checkInt64($var);
        $this->total_entries = $var;

        return $this;
    }

    /**
     * The total number of bytes used.
     *
     * Generated from protobuf field <code>int64 total_bytes = 2;</code>
     * @return int|string
     */
    public function getTotalBytes()
    {
        return $this->total_bytes;
    }

    /**
     * The total number of bytes used.
     *
     * Generated from protobuf field <code>int64 total_bytes = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setTotalBytes($var)
    {
        GPBUtil::checkInt64($var);
        $this->total_bytes = $var;

        return $this;
    }

}

